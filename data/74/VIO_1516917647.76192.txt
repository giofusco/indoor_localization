ARKit Data
174622.952222416
normal
simd_float4x4([[-0.144337, -0.969886, 0.196184, 0.0)], [0.579632, 0.0778162, 0.811155, 0.0)], [-0.801994, 0.230794, 0.550945, 0.0)], [-13.6887, 0.621132, 1.24198, 1.0)]])
-13.6887, 0.621132, 1.24198
float3(-0.232894, -0.96887, -1.49074)
174623.302803458
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.0569328, -0.979618, 0.192554, 0.0)], [0.998366, 0.0558478, -0.0109936, 0.0)], [3.79133e-09, 0.19288, 0.981209, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.194096, 3.86394e-09, -1.51385)
174623.402825625
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.0569328, -0.979618, 0.192554, 0.0)], [0.998366, 0.0558478, -0.0109936, 0.0)], [3.79133e-09, 0.19288, 0.981209, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.194096, 3.86394e-09, -1.51385)
174623.502881125
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.213891, -0.976831, -0.00714617, 0.0)], [0.21298, 0.0537721, -0.975576, 0.0)], [0.953357, 0.207145, 0.219547, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.208656, 1.34445, -1.5158)
174623.602936916
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.224085, -0.974554, -0.00508903, 0.0)], [0.206848, 0.0526633, -0.976955, 0.0)], [0.952363, 0.217869, 0.213385, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.21963, 1.35038, -1.51681)
174623.702992583
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.225571, -0.974223, 0.00194399, 0.0)], [0.196618, 0.0435702, -0.979512, 0.0)], [0.954178, 0.221331, 0.201378, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.22318, 1.3628, -1.5261)
174623.803048083
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.249063, -0.96847, -0.0054134, 0.0)], [0.186242, 0.05338, -0.981053, 0.0)], [0.950409, 0.243336, 0.193665, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.245804, 1.36978, -1.51573)
174623.903103875
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.244486, -0.96965, -0.000976377, 0.0)], [0.181428, 0.0467341, -0.982293, 0.0)], [0.952526, 0.23998, 0.187347, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.242345, 1.37659, -1.52264)
174624.003159416
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.23593, -0.971765, 0.00187262, 0.0)], [0.192652, 0.044884, -0.98024, 0.0)], [0.952479, 0.231628, 0.197802, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.233751, 1.36604, -1.52464)
174624.103215125
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.240912, -0.9705, 0.00917119, 0.0)], [0.203601, 0.0412969, -0.978183, 0.0)], [0.948947, 0.237523, 0.207543, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.239815, 1.35548, -1.52827)
174624.203270708
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.247813, -0.968534, 0.0228348, 0.0)], [0.211205, 0.0310064, -0.97695, 0.0)], [0.945502, 0.246924, 0.212243, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.249504, 1.34998, -1.53879)
174624.303326416
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.232576, -0.972124, 0.0295549, 0.0)], [0.212472, 0.0211316, -0.976939, 0.0)], [0.949081, 0.233492, 0.211464, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.235667, 1.35157, -1.54906)
174624.403381916
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.199465, -0.979576, 0.0251769, 0.0)], [0.211899, 0.0180336, -0.977125, 0.0)], [0.956715, 0.200237, 0.211168, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.2016, 1.35356, -1.55239)
174624.503437708
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.166835, -0.98577, 0.020326, 0.0)], [0.204517, 0.0144317, -0.978757, 0.0)], [0.964535, 0.167448, 0.204014, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.168241, 1.36235, -1.55616)
174624.603493333
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.147688, -0.988844, 0.0190659, 0.0)], [0.196669, 0.0104701, -0.980414, 0.0)], [0.969277, 0.148545, 0.196021, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.149097, 1.37125, -1.56021)
174624.703548958
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.128176, -0.991704, 0.00909592, 0.0)], [0.172381, 0.0132463, -0.984941, 0.0)], [0.976649, 0.127814, 0.172649, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.128164, 1.39583, -1.55744)
174624.803604833
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.111528, -0.993728, 0.00731093, 0.0)], [0.129409, 0.0072293, -0.991565, 0.0)], [0.985293, 0.111533, 0.129403, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.111766, 1.44021, -1.56352)
174624.903660333
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.105699, -0.99435, 0.00913744, 0.0)], [0.0477783, -0.00409888, -0.998849, 0.0)], [0.993243, 0.106014, 0.047074, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.106214, 1.52344, -1.57492)
174625.003716083
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.126019, -0.992021, -0.00103357, 0.0)], [-0.0451744, -0.00469616, -0.998968, 0.0)], [0.990992, 0.125936, -0.0454076, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.126271, 1.61658, -1.57553)
174625.103771541
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.145054, -0.989359, -0.0107857, 0.0)], [-0.181741, -0.0159245, -0.983217, 0.0)], [0.972582, 0.14458, -0.182119, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.145089, 1.75591, -1.58689)
174625.203827416
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.17139, -0.985177, -0.00632011, 0.0)], [-0.327713, -0.0509561, -0.943401, 0.0)], [0.929095, 0.163761, -0.331592, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.164502, 1.9136, -1.62247)
174625.303882958
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.206011, -0.978159, -0.0274602, 0.0)], [-0.421543, -0.0633832, -0.904589, 0.0)], [0.88309, 0.197933, -0.425398, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.199249, 2.01971, -1.6355)
174625.403938708
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.22871, -0.972099, -0.0520056, 0.0)], [-0.47874, -0.0657944, -0.875486, 0.0)], [0.847637, 0.225131, -0.480434, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.227078, 2.08644, -1.63838)
174625.503994208
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.230028, -0.971332, -0.0599177, 0.0)], [-0.549057, -0.0786946, -0.83207, 0.0)], [0.8035, 0.2243, -0.551423, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.226224, 2.17225, -1.65164)
174625.60405
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.253102, -0.96154, -0.106626, 0.0)], [-0.633263, -0.0813403, -0.769647, 0.0)], [0.731372, 0.262324, -0.6295, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.26543, 2.28148, -1.65519)
174625.704105625
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.266103, -0.950682, -0.159319, 0.0)], [-0.667592, -0.0625301, -0.741893, 0.0)], [0.695341, 0.303783, -0.651312, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.308661, 2.32351, -1.63648)
174625.804161375
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.246546, -0.952752, -0.17739, 0.0)], [-0.633193, -0.0197897, -0.773737, 0.0)], [0.733668, 0.303087, -0.608161, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.307931, 2.26293, -1.59156)
174625.904217125
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.241015, -0.955176, -0.171872, 0.0)], [-0.652244, -0.028275, -0.757478, 0.0)], [0.718663, 0.294669, -0.629828, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.29911, 2.29041, -1.60039)
174626.004272666
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.223405, -0.959927, -0.169171, 0.0)], [-0.694023, -0.0347856, -0.719107, 0.0)], [0.684404, 0.278064, -0.673989, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.281778, 2.34853, -1.60702)
174626.104328583
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.221811, -0.960622, -0.167311, 0.0)], [-0.719857, -0.0455795, -0.692618, 0.0)], [0.657716, 0.274074, -0.701628, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.277627, 2.38849, -1.61821)
174626.204384125
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.212679, -0.961593, -0.173479, 0.0)], [-0.730587, -0.0385936, -0.681722, 0.0)], [0.648842, 0.271733, -0.710742, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.275194, 2.40169, -1.61091)
174626.304439875
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.169499, -0.974665, -0.145895, 0.0)], [-0.724675, -0.0229288, -0.688704, 0.0)], [0.667909, 0.222465, -0.710208, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.224343, 2.38688, -1.59432)
174626.404495416
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.140267, -0.984001, -0.109796, 0.0)], [-0.726892, -0.0270433, -0.686214, 0.0)], [0.672263, 0.176067, -0.719062, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.17699, 2.38982, -1.59827)
174626.50455125
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.1128, -0.991105, -0.0705259, 0.0)], [-0.731062, -0.034709, -0.681422, 0.0)], [0.67291, 0.128427, -0.728481, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.128783, 2.39583, -1.6058)
174626.604606875
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.0939211, -0.995074, -0.031509, 0.0)], [-0.741817, -0.0488328, -0.668817, 0.0)], [0.663981, 0.0861938, -0.742756, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.0863009, 2.41213, -1.61983)
174626.704662625
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.0949792, -0.995457, 0.0053654, 0.0)], [-0.755767, -0.0756086, -0.650454, 0.0)], [0.647902, 0.0577286, -0.759523, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.0577607, 2.43534, -1.6466)
174626.804718333
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.0965718, -0.994911, 0.0284812, 0.0)], [-0.76977, -0.0927897, -0.631534, 0.0)], [0.630959, 0.0390684, -0.774821, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.0390783, 2.45818, -1.66379)
174626.904774
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.0960655, -0.994919, 0.0298529, 0.0)], [-0.77108, -0.0933436, -0.629851, 0.0)], [0.629435, 0.0374922, -0.776137, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.037501, 2.46019, -1.66434)
174627.004829875
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.0888951, -0.995702, 0.0256763, 0.0)], [-0.770585, -0.0850767, -0.631626, 0.0)], [0.631092, 0.0363671, -0.774844, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.0363751, 2.45809, -1.65603)
174627.104885458
limited(__ObjC.ARCamera.TrackingState.Reason.initializing)
simd_float4x4([[0.0935817, -0.995124, 0.0309005, 0.0)], [-0.77508, -0.0922906, -0.625079, 0.0)], [0.62488, 0.03455, -0.779945, 0.0)], [0.0, 0.0, 0.0, 1.0)]])
0.0, 0.0, 0.0
float3(-0.0345569, 2.46613, -1.66327)
174627.204941291
normal
simd_float4x4([[0.196373, -0.979451, 0.0459693, 0.0)], [-0.761223, -0.181835, -0.622476, 0.0)], [0.618043, 0.0872446, -0.781288, 0.0)], [-0.131004, -0.00359923, -0.0259502, 1.0)]])
-0.131004, -0.00359923, -0.0259502
float3(-0.0873556, 2.47233, -1.75436)
174627.304996958
normal
simd_float4x4([[0.211586, -0.977302, 0.0106169, 0.0)], [-0.76237, -0.171831, -0.623912, 0.0)], [0.611575, 0.123917, -0.781422, 0.0)], [-0.330424, -0.00540003, -0.0570639, 1.0)]])
-0.330424, -0.00540003, -0.0570639
float3(-0.124236, 2.47752, -1.74484)
174627.405052708
normal
simd_float4x4([[0.192104, -0.981372, 0.00219625, 0.0)], [-0.764684, -0.151089, -0.626443, 0.0)], [0.615105, 0.118663, -0.779464, 0.0)], [-0.525418, -0.00949295, -0.0948109, 1.0)]])
-0.525418, -0.00949295, -0.0948109
float3(-0.118943, 2.47351, -1.72355)
174627.505108416
normal
simd_float4x4([[0.204199, -0.978479, -0.0297014, 0.0)], [-0.77358, -0.142697, -0.617424, 0.0)], [0.599898, 0.149054, -0.78607, 0.0)], [-0.730239, -0.0181547, -0.126304, 1.0)]])
-0.730239, -0.0181547, -0.126304
float3(-0.149611, 2.48972, -1.71561)
174627.605164166
normal
simd_float4x4([[0.20162, -0.97808, -0.0520543, 0.0)], [-0.779369, -0.128015, -0.613348, 0.0)], [0.593239, 0.164233, -0.788096, 0.0)], [-0.932244, -0.0311769, -0.157624, 1.0)]])
-0.932244, -0.0311769, -0.157624
float3(-0.16498, 2.49633, -1.70094)
174627.705219791
normal
simd_float4x4([[0.198346, -0.979095, -0.0450699, 0.0)], [-0.782123, -0.130394, -0.609328, 0.0)], [0.590714, 0.156108, -0.791636, 0.0)], [-1.14936, -0.0506819, -0.190025, 1.0)]])
-1.14936, -0.0506819, -0.190025
float3(-0.156749, 2.50053, -1.7032)
174627.805275625
normal
simd_float4x4([[0.190157, -0.98092, -0.0404533, 0.0)], [-0.776075, -0.124955, -0.618137, 0.0)], [0.601288, 0.148938, -0.785029, 0.0)], [-1.36994, -0.0699622, -0.210385, 1.0)]])
-1.36994, -0.0699622, -0.210385
float3(-0.149494, 2.48797, -1.6975)
174627.905331208
normal
simd_float4x4([[0.196334, -0.979551, -0.0439681, 0.0)], [-0.765255, -0.125039, -0.631466, 0.0)], [0.613056, 0.157625, -0.774156, 0.0)], [-1.59992, -0.0840939, -0.232307, 1.0)]])
-1.59992, -0.0840939, -0.232307
float3(-0.158286, 2.47181, -1.69776)
174628.005387
normal
simd_float4x4([[0.244988, -0.967253, -0.0663425, 0.0)], [-0.770383, -0.152666, -0.619034, 0.0)], [0.588635, 0.202765, -0.782557, 0.0)], [-1.91439, -0.0203067, -0.00163892, 1.0)]])
-1.91439, -0.0203067, -0.00163892
float3(-0.204181, 2.49669, -1.72734)
174628.105442875
normal
simd_float4x4([[0.265253, -0.959431, -0.0955616, 0.0)], [-0.775696, -0.153483, -0.612159, 0.0)], [0.572658, 0.236504, -0.784939, 0.0)], [-2.18717, 0.0441341, 0.27714, 1.0)]])
-2.18717, 0.0441341, 0.27714
float3(-0.238766, 2.5113, -1.72943)
174628.2054985
normal
simd_float4x4([[0.298051, -0.947874, -0.112697, 0.0)], [-0.781129, -0.174338, -0.599536, 0.0)], [0.548637, 0.266724, -0.792373, 0.0)], [-2.43664, 0.100757, 0.465436, 1.0)]])
-2.43664, 0.100757, 0.465436
float3(-0.269992, 2.53599, -1.75269)
174628.305554291
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.301748, -0.946317, -0.115898, 0.0)], [-0.796659, -0.183495, -0.575903, 0.0)], [0.52372, 0.266109, -0.809261, 0.0)], [-2.66094, 0.157606, 0.726843, 1.0)]])
-2.66094, 0.157606, 0.726843
float3(-0.269354, 2.56722, -1.76232)
174628.405609958
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.293243, -0.947657, -0.126309, 0.0)], [-0.8244, -0.183748, -0.535352, 0.0)], [0.484121, 0.261117, -0.835132, 0.0)], [-2.89634, 0.207829, 0.89091, 1.0)]])
-2.89634, 0.207829, 0.89091
float3(-0.264179, 2.61624, -1.76232)
174628.50566575
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.276583, -0.949068, -0.150904, 0.0)], [-0.845653, -0.165777, -0.507335, 0.0)], [0.456479, 0.267932, -0.848434, 0.0)], [-3.08242, 0.282613, 1.23307, 1.0)]])
-3.08242, 0.282613, 1.23307
float3(-0.271246, 2.64799, -1.74373)
174628.605721458
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.275765, -0.948763, -0.154282, 0.0)], [-0.869242, -0.177626, -0.461375, 0.0)], [0.410331, 0.26134, -0.873688, 0.0)], [-3.1954, 0.386734, 1.66793, 1.0)]])
-3.1954, 0.386734, 1.66793
float3(-0.26441, 2.70251, -1.75587)
174628.705777166
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.212942, -0.963582, -0.161759, 0.0)], [-0.878307, -0.116246, -0.46375, 0.0)], [0.428058, 0.240826, -0.871074, 0.0)], [-3.13858, 0.521078, 2.27044, 1.0)]])
-3.13858, 0.521078, 2.27044
float3(-0.243216, 2.68484, -1.69086)
174628.805832958
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.205996, -0.95533, -0.211919, 0.0)], [-0.880617, -0.0865455, -0.465857, 0.0)], [0.426707, 0.282584, -0.859109, 0.0)], [-3.06354, 0.613878, 2.797, 1.0)]])
-3.06354, 0.613878, 2.797
float3(-0.286487, 2.6806, -1.66114)
174628.905888791
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.158357, -0.959539, -0.232827, 0.0)], [-0.877173, -0.0284563, -0.479331, 0.0)], [0.453311, 0.280135, -0.846188, 0.0)], [-2.92279, 0.690825, 3.31278, 1.0)]])
-2.92279, 0.690825, 3.31278
float3(-0.283935, 2.64979, -1.60044)
174629.005944291
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.101224, -0.968664, -0.226814, 0.0)], [-0.864125, 0.0273688, -0.502533, 0.0)], [0.492993, 0.246864, -0.834276, 0.0)], [-2.86218, 0.693766, 3.78592, 1.0)]])
-2.86218, 0.693766, 3.78592
float3(-0.249442, 2.60787, -1.54255)
174629.106000166
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.0819518, -0.97, -0.228875, 0.0)], [-0.855104, 0.0495278, -0.516086, 0.0)], [0.511939, 0.238006, -0.825392, 0.0)], [-3.0433, 0.688423, 4.0976, 1.0)]])
-3.0433, 0.688423, 4.0976
float3(-0.240312, 2.58642, -1.51978)
174629.206056041
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.0421131, -0.972144, -0.230569, 0.0)], [-0.783392, 0.1111, -0.611517, 0.0)], [0.620099, 0.206379, -0.756892, 0.0)], [-3.20653, 0.679992, 4.42608, 1.0)]])
-3.20653, 0.679992, 4.42608
float3(-0.207872, 2.45521, -1.45701)
174629.306111625
normal
simd_float4x4([[0.081709, -0.964464, -0.251263, 0.0)], [-0.740933, 0.109833, -0.662536, 0.0)], [0.666589, 0.240304, -0.705629, 0.0)], [-3.42563, 0.677352, 4.73259, 1.0)]])
-3.42563, 0.677352, 4.73259
float3(-0.242679, 2.38464, -1.4574)
174629.406167541
normal
simd_float4x4([[0.11394, -0.961194, -0.251243, 0.0)], [-0.708194, 0.0987795, -0.699074, 0.0)], [0.696764, 0.257581, -0.669457, 0.0)], [-3.66575, 0.700002, 5.01331, 1.0)]])
-3.66575, 0.700002, 5.01331
float3(-0.260518, 2.33621, -1.46839)
174629.50622325
normal
simd_float4x4([[0.126533, -0.966664, -0.2226, 0.0)], [-0.720425, 0.0647064, -0.690508, 0.0)], [0.681893, 0.247738, -0.688221, 0.0)], [-3.91068, 0.718648, 5.26976, 1.0)]])
-3.91068, 0.718648, 5.26976
float3(-0.250345, 2.36081, -1.50396)
174629.606279125
normal
simd_float4x4([[0.141833, -0.973957, -0.176891, 0.0)], [-0.720842, 0.0208513, -0.692785, 0.0)], [0.678432, 0.22577, -0.699112, 0.0)], [-4.13876, 0.734407, 5.51716, 1.0)]])
-4.13876, 0.734407, 5.51716
float3(-0.227734, 2.37121, -1.54939)
174629.70633475
normal
simd_float4x4([[0.149665, -0.976204, -0.15693, 0.0)], [-0.718261, 0.00172992, -0.695771, 0.0)], [0.679486, 0.216849, -0.70091, 0.0)], [-4.37425, 0.748271, 5.79664, 1.0)]])
-4.37425, 0.748271, 5.79664
float3(-0.218586, 2.37171, -1.56902)
174629.8063905
normal
simd_float4x4([[0.143132, -0.979221, -0.143662, 0.0)], [-0.713607, -0.00152979, -0.700545, 0.0)], [0.685769, 0.202789, -0.698998, 0.0)], [-4.62555, 0.761841, 6.03382, 1.0)]])
-4.62555, 0.761841, 6.03382
float3(-0.204205, 2.36575, -1.57236)
174629.906446208
normal
simd_float4x4([[0.15219, -0.978542, -0.138904, 0.0)], [-0.710314, -0.0105684, -0.703806, 0.0)], [0.687235, 0.205777, -0.69668, 0.0)], [-4.86083, 0.767254, 6.21688, 1.0)]])
-4.86083, 0.767254, 6.21688
float3(-0.207258, 2.36302, -1.5816)
174630.006502166
normal
simd_float4x4([[0.156483, -0.977752, -0.13969, 0.0)], [-0.706672, -0.0120279, -0.707439, 0.0)], [0.69002, 0.209417, -0.692832, 0.0)], [-5.08152, 0.784543, 6.36903, 1.0)]])
-5.08152, 0.784543, 6.36903
float3(-0.210979, 2.35823, -1.5831)
174630.106557875
normal
simd_float4x4([[0.142774, -0.977291, -0.156582, 0.0)], [-0.703286, 0.011144, -0.71082, 0.0)], [0.696423, 0.211608, -0.685724, 0.0)], [-5.27038, 0.803624, 6.49073, 1.0)]])
-5.27038, 0.803624, 6.49073
float3(-0.21322, 2.34845, -1.55939)
174630.206613625
normal
simd_float4x4([[0.139949, -0.974233, -0.176873, 0.0)], [-0.702169, 0.0282969, -0.711448, 0.0)], [0.698121, 0.223761, -0.680116, 0.0)], [-5.45642, 0.800764, 6.58496, 1.0)]])
-5.45642, 0.800764, 6.58496
float3(-0.225672, 2.34313, -1.54176)
174630.306669583
normal
simd_float4x4([[0.144103, -0.971399, -0.188728, 0.0)], [-0.694802, 0.0364786, -0.718275, 0.0)], [0.704616, 0.234634, -0.669674, 0.0)], [-5.61186, 0.76943, 6.62564, 1.0)]])
-5.61186, 0.76943, 6.62564
float3(-0.236842, 2.33077, -1.53326)
174630.40672525
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.149198, -0.971694, -0.183171, 0.0)], [-0.678183, 0.0342511, -0.734095, 0.0)], [0.719589, 0.233749, -0.653875, 0.0)], [-5.79175, 0.752363, 6.69829, 1.0)]])
-5.79175, 0.752363, 6.69829
float3(-0.235931, 2.30839, -1.53556)
174630.506781
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.148466, -0.974607, -0.16763, 0.0)], [-0.652729, 0.0307635, -0.756967, 0.0)], [0.742902, 0.221801, -0.631587, 0.0)], [-6.02857, 0.736996, 6.82651, 1.0)]])
-6.02857, 0.736996, 6.82651
float3(-0.223661, 2.27538, -1.53924)
174630.606836833
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.171194, -0.974238, -0.146811, 0.0)], [-0.625961, 0.0075185, -0.779818, 0.0)], [0.760832, 0.225399, -0.608548, 0.0)], [-6.18844, 0.715494, 6.84484, 1.0)]])
-6.18844, 0.715494, 6.84484
float3(-0.227352, 2.24544, -1.56308)
174630.706892666
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.176531, -0.978147, -0.109837, 0.0)], [-0.610853, -0.0213706, -0.791455, 0.0)], [0.771813, 0.206811, -0.601277, 0.0)], [-6.29952, 0.694846, 6.83976, 1.0)]])
-6.29952, 0.694846, 6.83976
float3(-0.208314, 2.23263, -1.59264)
174630.806948416
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.188787, -0.976978, -0.0993607, 0.0)], [-0.604764, -0.0359484, -0.795593, 0.0)], [0.773706, 0.210287, -0.597628, 0.0)], [-6.44099, 0.688771, 6.88793, 1.0)]])
-6.44099, 0.688771, 6.88793
float3(-0.211869, 2.22849, -1.60758)
174630.907004208
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.207351, -0.97555, -0.072858, 0.0)], [-0.616186, -0.0723968, -0.784266, 0.0)], [0.759816, 0.207512, -0.616131, 0.0)], [-6.60719, 0.663619, 6.99148, 1.0)]])
-6.60719, 0.663619, 6.99148
float3(-0.209031, 2.25215, -1.64487)
174631.007059875
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.216772, -0.97552, -0.0370233, 0.0)], [-0.661215, -0.118817, -0.740727, 0.0)], [0.718195, 0.185049, -0.670785, 0.0)], [-6.80642, 0.638024, 7.15893, 1.0)]])
-6.80642, 0.638024, 7.15893
float3(-0.186122, 2.32207, -1.692)
174631.107115708
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.211992, -0.974899, -0.0680508, 0.0)], [-0.677703, -0.0964818, -0.728979, 0.0)], [0.704116, 0.200656, -0.681145, 0.0)], [-7.01632, 0.612491, 7.35482, 1.0)]])
-7.01632, 0.612491, 7.35482
float3(-0.202028, 2.33961, -1.66944)
174631.207171375
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.201048, -0.977651, -0.0614703, 0.0)], [-0.697078, -0.0986977, -0.71017, 0.0)], [0.688231, 0.185628, -0.701342, 0.0)], [-7.13495, 0.592522, 7.46176, 1.0)]])
-7.13495, 0.592522, 7.46176
float3(-0.186711, 2.36563, -1.67141)
174631.307227291
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.208898, -0.973004, -0.0981064, 0.0)], [-0.712634, -0.0827576, -0.696637, 0.0)], [0.669712, 0.21544, -0.710684, 0.0)], [-7.18503, 0.581183, 7.52221, 1.0)]])
-7.18503, 0.581183, 7.52221
float3(-0.217143, 2.38587, -1.65565)
174631.407283333
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.210583, -0.971499, -0.108836, 0.0)], [-0.711593, -0.0759966, -0.69847, 0.0)], [0.670291, 0.224533, -0.707315, 0.0)], [-7.24448, 0.570552, 7.55517, 1.0)]])
-7.24448, 0.570552, 7.55517
float3(-0.226463, 2.38306, -1.64886)
174631.507338916
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.232429, -0.963643, -0.131794, 0.0)], [-0.709613, -0.0753452, -0.700552, 0.0)], [0.665152, 0.256351, -0.701325, 0.0)], [-7.25191, 0.55249, 7.55829, 1.0)]])
-7.25191, 0.55249, 7.55829
float3(-0.259245, 2.38266, -1.64883)
174631.607394708
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.223653, -0.964013, -0.14373, 0.0)], [-0.707943, -0.0593146, -0.703775, 0.0)], [0.669923, 0.259154, -0.695732, 0.0)], [-7.25715, 0.534348, 7.46896, 1.0)]])
-7.25715, 0.534348, 7.46896
float3(-0.262146, 2.37509, -1.63225)
174631.707450541
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.200696, -0.970359, -0.134631, 0.0)], [-0.68531, -0.0408593, -0.727105, 0.0)], [0.700051, 0.238191, -0.673196, 0.0)], [-7.23771, 0.510793, 7.32756, 1.0)]])
-7.23771, 0.510793, 7.32756
float3(-0.240503, 2.33664, -1.61288)
174631.807506416
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.192065, -0.97504, -0.111392, 0.0)], [-0.65185, -0.0418986, -0.75719, 0.0)], [0.733623, 0.21804, -0.643627, 0.0)], [-7.17562, 0.504421, 7.13294, 1.0)]])
-7.17562, 0.504421, 7.13294
float3(-0.219806, 2.29094, -1.61374)
174631.907562083
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.187351, -0.979006, -0.0802977, 0.0)], [-0.631083, -0.0573196, -0.773594, 0.0)], [0.752751, 0.195608, -0.628573, 0.0)], [-7.03066, 0.505325, 6.91698, 1.0)]])
-7.03066, 0.505325, 6.91698
float3(-0.196877, 2.26654, -1.62928)
174632.007617958
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.187222, -0.979368, -0.0760712, 0.0)], [-0.613822, -0.0561784, -0.787443, 0.0)], [0.766923, 0.194121, -0.611675, 0.0)], [-6.86116, 0.513399, 6.73555, 1.0)]])
-6.86116, 0.513399, 6.73555
float3(-0.195361, 2.24405, -1.6281)
174632.10767375
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.204118, -0.976007, -0.0758021, 0.0)], [-0.59184, -0.061354, -0.803717, 0.0)], [0.779783, 0.208916, -0.590163, 0.0)], [-6.68594, 0.533179, 6.54683, 1.0)]])
-6.68594, 0.533179, 6.54683
float3(-0.210467, 2.21865, -1.63358)
174632.207729666
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.200289, -0.977884, -0.0602314, 0.0)], [-0.583074, -0.0695688, -0.809435, 0.0)], [0.787343, 0.197241, -0.584113, 0.0)], [-6.50088, 0.551895, 6.40181, 1.0)]])
-6.50088, 0.551895, 6.40181
float3(-0.198542, 2.20908, -1.64182)
174632.307785416
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.194814, -0.978715, -0.0645303, 0.0)], [-0.584018, -0.0628889, -0.809301, 0.0)], [0.788017, 0.19535, -0.583839, 0.0)], [-6.34375, 0.568648, 6.26744, 1.0)]])
-6.34375, 0.568648, 6.26744
float3(-0.196614, 2.20845, -1.63496)
174632.407841333
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.192509, -0.979782, -0.054478, 0.0)], [-0.591088, -0.0714649, -0.803435, 0.0)], [0.783298, 0.18687, -0.592895, 0.0)], [-6.20983, 0.579063, 6.20305, 1.0)]])
-6.20983, 0.579063, 6.20305
float3(-0.187975, 2.21871, -1.64361)
174632.507897208
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.199237, -0.977332, -0.0715934, 0.0)], [-0.601752, -0.0643557, -0.796086, 0.0)], [0.773434, 0.201692, -0.600934, 0.0)], [-6.02038, 0.606972, 6.10145, 1.0)]])
-6.02038, 0.606972, 6.10145
float3(-0.203085, 2.23133, -1.63655)
174632.607952958
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.199855, -0.976278, -0.0833047, 0.0)], [-0.610703, -0.0576284, -0.78976, 0.0)], [0.766225, 0.208712, -0.607733, 0.0)], [-5.81553, 0.649701, 5.98063, 1.0)]])
-5.81553, 0.649701, 5.98063
float3(-0.210258, 2.24135, -1.62976)
174632.708008875
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.20994, -0.972552, -0.100342, 0.0)], [-0.631145, -0.0564259, -0.77361, 0.0)], [0.746713, 0.225742, -0.625668, 0.0)], [-5.64202, 0.69196, 5.83211, 1.0)]])
-5.64202, 0.69196, 5.83211
float3(-0.227705, 2.26822, -1.62875)
174632.808064666
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.205354, -0.970401, -0.127092, 0.0)], [-0.646624, -0.0370506, -0.761909, 0.0)], [0.734648, 0.238641, -0.635093, 0.0)], [-5.49842, 0.729378, 5.6888, 1.0)]])
-5.49842, 0.729378, 5.6888
float3(-0.240966, 2.28364, -1.60896)
174632.908120541
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.213341, -0.968006, -0.132102, 0.0)], [-0.645604, -0.0381998, -0.762716, 0.0)], [0.733268, 0.248004, -0.633098, 0.0)], [-5.52821, 0.738692, 5.71955, 1.0)]])
-5.52821, 0.738692, 5.71955
float3(-0.250619, 2.28301, -1.61024)
174633.008176333
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.197973, -0.972739, -0.120767, 0.0)], [-0.633798, -0.033048, -0.772792, 0.0)], [0.747735, 0.229534, -0.623063, 0.0)], [-5.52347, 0.747482, 5.68781, 1.0)]])
-5.52347, 0.747482, 5.68781
float3(-0.231599, 2.2655, -1.60476)
174633.108232125
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.180708, -0.978928, -0.0951011, 0.0)], [-0.599369, -0.0329438, -0.799795, 0.0)], [0.779809, 0.20153, -0.592692, 0.0)], [-5.42215, 0.763417, 5.52281, 1.0)]])
-5.42215, 0.763417, 5.52281
float3(-0.20292, 2.2207, -1.60444)
174633.208287916
normal
simd_float4x4([[0.192388, -0.97757, -0.085699, 0.0)], [-0.575555, -0.0416744, -0.816701, 0.0)], [0.79481, 0.206448, -0.570663, 0.0)], [-5.22779, 0.784835, 5.26135, 1.0)]])
-5.22779, 0.784835, 5.26135
float3(-0.207944, 2.19349, -1.6134)
174633.308343833
normal
simd_float4x4([[0.193368, -0.97758, -0.0833437, 0.0)], [-0.570901, -0.043026, -0.819891, 0.0)], [0.797923, 0.206122, -0.566422, 0.0)], [-4.97746, 0.814373, 4.93916, 1.0)]])
-4.97746, 0.814373, 4.93916
float3(-0.20761, 2.18812, -1.61478)
174633.4083995
normal
simd_float4x4([[0.188478, -0.980295, -0.0591408, 0.0)], [-0.583373, -0.0633125, -0.809733, 0.0)], [0.790033, 0.187118, -0.583811, 0.0)], [-4.81101, 0.839731, 4.74661, 1.0)]])
-4.81101, 0.839731, 4.74661
float3(-0.188228, 2.2072, -1.63529)
174633.508455458
normal
simd_float4x4([[0.173664, -0.983656, -0.0475684, 0.0)], [-0.615736, -0.0707573, -0.784769, 0.0)], [0.768577, 0.165575, -0.61796, 0.0)], [-4.73158, 0.852867, 4.67209, 1.0)]])
-4.73158, 0.852867, 4.67209
float3(-0.166341, 2.24799, -1.64261)
174633.608511458
normal
simd_float4x4([[0.180209, -0.982103, -0.0547581, 0.0)], [-0.649216, -0.0769358, -0.756703, 0.0)], [0.738948, 0.171914, -0.651462, 0.0)], [-4.69348, 0.861774, 4.67838, 1.0)]])
-4.69348, 0.861774, 4.67838
float3(-0.172773, 2.29336, -1.64897)
174633.708567208
normal
simd_float4x4([[0.178048, -0.982601, -0.0528522, 0.0)], [-0.66544, -0.0806633, -0.74208, 0.0)], [0.724906, 0.167296, -0.668224, 0.0)], [-4.63192, 0.869359, 4.67331, 1.0)]])
-4.63192, 0.869359, 4.67331
float3(-0.168086, 2.31553, -1.6527)
174633.808623041
normal
simd_float4x4([[0.18597, -0.980787, -0.0589232, 0.0)], [-0.67896, -0.0849288, -0.729246, 0.0)], [0.710231, 0.175625, -0.68171, 0.0)], [-4.56497, 0.873985, 4.65804, 1.0)]])
-4.56497, 0.873985, 4.65804
float3(-0.17654, 2.33571, -1.65717)
174633.908678833
normal
simd_float4x4([[0.175284, -0.981546, -0.0764401, 0.0)], [-0.670486, -0.0621596, -0.739314, 0.0)], [0.720919, 0.180842, -0.669008, 0.0)], [-4.48993, 0.888728, 4.61606, 1.0)]])
-4.48993, 0.888728, 4.61606
float3(-0.181843, 2.31886, -1.63404)
174634.008734833
normal
simd_float4x4([[0.178829, -0.980207, -0.0849336, 0.0)], [-0.649949, -0.0528856, -0.758135, 0.0)], [0.738638, 0.190779, -0.646543, 0.0)], [-4.43814, 0.90768, 4.55823, 1.0)]])
-4.43814, 0.90768, 4.55823
float3(-0.191956, 2.28981, -1.6247)
174634.108790625
normal
simd_float4x4([[0.174888, -0.978472, -0.109575, 0.0)], [-0.620577, -0.023144, -0.783804, 0.0)], [0.764394, 0.205078, -0.611265, 0.0)], [-4.46114, 0.919286, 4.56227, 1.0)]])
-4.46114, 0.919286, 4.56227
float3(-0.206543, 2.24534, -1.59445)
174634.208846583
normal
simd_float4x4([[0.155567, -0.981798, -0.10896, 0.0)], [-0.58631, -0.0029987, -0.810081, 0.0)], [0.795009, 0.189906, -0.576104, 0.0)], [-4.54516, 0.935043, 4.60831, 1.0)]])
-4.54516, 0.935043, 4.60831
float3(-0.191066, 2.19788, -1.57385)
174634.30890225
normal
simd_float4x4([[0.173226, -0.979137, -0.106222, 0.0)], [-0.557121, -0.00847942, -0.830388, 0.0)], [0.812164, 0.203023, -0.546966, 0.0)], [-4.69213, 0.943467, 4.70854, 1.0)]])
-4.69213, 0.943467, 4.70854
float3(-0.204444, 2.16349, -1.57946)
174634.408958291
normal
simd_float4x4([[0.176061, -0.978825, -0.104426, 0.0)], [-0.53085, -0.00507336, -0.84745, 0.0)], [0.828976, 0.204638, -0.520503, 0.0)], [-4.8656, 0.950242, 4.85261, 1.0)]])
-4.8656, 0.950242, 4.85261
float3(-0.206094, 2.13147, -1.57598)
174634.509014
normal
simd_float4x4([[0.174806, -0.97978, -0.0973373, 0.0)], [-0.506614, -0.0047346, -0.86216, 0.0)], [0.844266, 0.200023, -0.497197, 0.0)], [-5.03923, 0.950829, 5.01257, 1.0)]])
-5.03923, 0.950829, 5.01257
float3(-0.201382, 2.10302, -1.57563)
174634.60907
normal
simd_float4x4([[0.175078, -0.980245, -0.0920153, 0.0)], [-0.489722, -0.00562641, -0.87186, 0.0)], [0.854119, 0.197706, -0.481033, 0.0)], [-5.21846, 0.953202, 5.1845, 1.0)]])
-5.21846, 0.953202, 5.1845
float3(-0.199017, 2.08371, -1.57654)
174634.709125875
normal
simd_float4x4([[0.16274, -0.98208, -0.0950536, 0.0)], [-0.463041, 0.00905228, -0.886291, 0.0)], [0.871269, 0.188248, -0.45327, 0.0)], [-5.39758, 0.960359, 5.36759, 1.0)]])
-5.39758, 0.960359, 5.36759
float3(-0.189378, 2.05051, -1.56158)
174634.809181708
normal
simd_float4x4([[0.173065, -0.982485, -0.0690793, 0.0)], [-0.461452, -0.018922, -0.886964, 0.0)], [0.870121, 0.18538, -0.456644, 0.0)], [-5.57965, 0.973032, 5.54127, 1.0)]])
-5.57965, 0.973032, 5.54127
float3(-0.186458, 2.05409, -1.59005)
174634.909237625
normal
simd_float4x4([[0.178706, -0.981608, -0.0671567, 0.0)], [-0.47631, -0.0265859, -0.878876, 0.0)], [0.860926, 0.189047, -0.472301, 0.0)], [-5.73616, 0.981008, 5.69085, 1.0)]])
-5.73616, 0.981008, 5.69085
float3(-0.190192, 2.07256, -1.59787)
174635.0092935
normal
simd_float4x4([[0.203518, -0.977094, -0.0621863, 0.0)], [-0.491724, -0.0470834, -0.869477, 0.0)], [0.846634, 0.207533, -0.490043, 0.0)], [-5.89555, 0.987427, 5.83862, 1.0)]])
-5.89555, 0.987427, 5.83862
float3(-0.209052, 2.09549, -1.61895)
174635.109349375
normal
simd_float4x4([[0.211944, -0.976015, -0.0497462, 0.0)], [-0.507028, -0.0663009, -0.859376, 0.0)], [0.835465, 0.207362, -0.508919, 0.0)], [-6.05322, 0.987087, 5.97966, 1.0)]])
-6.05322, 0.987087, 5.97966
float3(-0.208877, 2.11791, -1.63862)
174635.209405291
normal
simd_float4x4([[0.229925, -0.971859, -0.0512369, 0.0)], [-0.516019, -0.0771053, -0.8531, 0.0)], [0.825142, 0.222588, -0.519226, 0.0)], [-6.22237, 0.978467, 6.12548, 1.0)]])
-6.22237, 0.978467, 6.12548
float3(-0.224469, 2.13245, -1.64997)
174635.309461125
normal
simd_float4x4([[0.211975, -0.976516, -0.0385022, 0.0)], [-0.514114, -0.0779218, -0.854175, 0.0)], [0.831116, 0.200859, -0.518558, 0.0)], [-6.40329, 0.970123, 6.28138, 1.0)]])
-6.40329, 0.970123, 6.28138
float3(-0.202234, 2.12863, -1.65042)
174635.409517041
normal
simd_float4x4([[0.216885, -0.975622, -0.0334955, 0.0)], [-0.490472, -0.0792387, -0.867847, 0.0)], [0.844037, 0.204652, -0.495701, 0.0)], [-6.5973, 0.969604, 6.44307, 1.0)]])
-6.5973, 0.969604, 6.44307
float3(-0.206108, 2.10182, -1.65184)
174635.509572833
normal
simd_float4x4([[0.20895, -0.977554, -0.0269837, 0.0)], [-0.426947, -0.0663651, -0.901838, 0.0)], [0.879805, 0.199959, -0.43123, 0.0)], [-6.75797, 0.980808, 6.57498, 1.0)]])
-6.75797, 0.980808, 6.57498
float3(-0.201317, 2.02653, -1.63858)
174635.609628791
normal
simd_float4x4([[0.190644, -0.98158, -0.0124792, 0.0)], [-0.338051, -0.0537116, -0.939594, 0.0)], [0.921616, 0.183347, -0.342064, 0.0)], [-6.88727, 0.988366, 6.68593, 1.0)]])
-6.88727, 0.988366, 6.68593
float3(-0.18439, 1.92619, -1.62546)
174635.709684708
normal
simd_float4x4([[0.186658, -0.981767, -0.0359464, 0.0)], [-0.205864, -0.00331031, -0.978575, 0.0)], [0.960614, 0.190059, -0.202729, 0.0)], [-7.0159, 1.00546, 6.80757, 1.0)]])
-7.0159, 1.00546, 6.80757
float3(-0.191222, 1.77879, -1.57417)
174635.809740666
normal
simd_float4x4([[0.155089, -0.987517, -0.02753, 0.0)], [-0.0371991, 0.0220099, -0.999065, 0.0)], [0.9872, 0.155968, -0.0333213, 0.0)], [-7.142, 1.0202, 6.92634, 1.0)]])
-7.142, 1.0202, 6.92634
float3(-0.156608, 1.60454, -1.54851)
174635.909796458
normal
simd_float4x4([[0.152354, -0.987912, -0.0285984, 0.0)], [0.152051, 0.052021, -0.987003, 0.0)], [0.97656, 0.146025, 0.158138, 0.0)], [-7.21865, 1.02054, 7.01861, 1.0)]])
-7.21865, 1.02054, 7.01861
float3(-0.146549, 1.41026, -1.51819)
174636.009852416
normal
simd_float4x4([[0.17663, -0.984098, -0.0187928, 0.0)], [0.339567, 0.0788454, -0.937272, 0.0)], [0.923849, 0.159169, 0.348093, 0.0)], [-7.28317, 1.01991, 7.10707, 1.0)]])
-7.28317, 1.01991, 7.10707
float3(-0.159849, 1.21046, -1.49085)
174636.109908208
normal
simd_float4x4([[0.203079, -0.978876, 0.0236979, 0.0)], [0.513769, 0.0859219, -0.853615, 0.0)], [0.833547, 0.185526, 0.520365, 0.0)], [-7.33787, 1.01415, 7.18813, 1.0)]])
-7.33787, 1.01415, 7.18813
float3(-0.186608, 1.01272, -1.48324)
174636.209964208
normal
simd_float4x4([[0.207199, -0.976562, 0.0582737, 0.0)], [0.661525, 0.0959754, -0.743756, 0.0)], [0.720731, 0.192655, 0.665906, 0.0)], [-7.41378, 1.01277, 7.29595, 1.0)]])
-7.41378, 1.01277, 7.29595
float3(-0.193867, 0.824916, -1.47283)
174636.310020125
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.209225, -0.974457, 0.0816018, 0.0)], [0.776203, 0.114743, -0.619954, 0.0)], [0.594755, 0.19305, 0.780384, 0.0)], [-7.516, 1.02399, 7.43005, 1.0)]])
-7.516, 1.02399, 7.43005
float3(-0.194269, 0.65122, -1.45359)
174636.410076041
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.198834, -0.975151, 0.097699, 0.0)], [0.871874, 0.130484, -0.472027, 0.0)], [0.44755, 0.179036, 0.876154, 0.0)], [-7.62357, 1.04767, 7.57265, 1.0)]])
-7.62357, 1.04767, 7.57265
float3(-0.180007, 0.472259, -1.43778)
174636.510131875
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.163538, -0.980615, 0.107934, 0.0)], [0.941686, 0.122553, -0.313382, 0.0)], [0.294079, 0.15289, 0.943473, 0.0)], [-7.72251, 1.07873, 7.71768, 1.0)]])
-7.72251, 1.07873, 7.71768
float3(-0.153492, 0.302154, -1.44647)
174636.610187791
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.129042, -0.984008, 0.122787, 0.0)], [0.981739, 0.109318, -0.155685, 0.0)], [0.139772, 0.140635, 0.980146, 0.0)], [-7.85873, 1.09411, 7.90452, 1.0)]])
-7.85873, 1.09411, 7.90452
float3(-0.141102, 0.141649, -1.46016)
174636.710243708
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[0.0977309, -0.988865, 0.112229, 0.0)], [0.99513, 0.0985566, 0.00181988, 0.0)], [-0.0128606, 0.111505, 0.993681, 0.0)], [-7.99041, 1.1127, 8.09385, 1.0)]])
-7.99041, 1.1127, 8.09385
float3(-0.111737, -0.0129416, -1.47146)
174636.810299666
normal
simd_float4x4([[0.077146, -0.990901, 0.110293, 0.0)], [0.986198, 0.0920948, 0.137593, 0.0)], [-0.146498, 0.0981564, 0.984329, 0.0)], [-8.13495, 1.12752, 8.2907, 1.0)]])
-8.13495, 1.12752, 8.2907
float3(-0.0983147, -0.147746, -1.47812)
174636.910355666
normal
simd_float4x4([[0.0851866, -0.988488, 0.125042, 0.0)], [0.964051, 0.113475, 0.240271, 0.0)], [-0.251694, 0.100079, 0.962619, 0.0)], [-8.30459, 1.1401, 8.48882, 1.0)]])
-8.30459, 1.1401, 8.48882
float3(-0.100247, -0.255743, -1.4565)
174637.010411375
normal
simd_float4x4([[0.11067, -0.986813, 0.118118, 0.0)], [0.935976, 0.143452, 0.321514, 0.0)], [-0.334218, 0.0749735, 0.939509, 0.0)], [-8.50106, 1.1508, 8.69249, 1.0)]])
-8.50106, 1.1508, 8.69249
float3(-0.0750439, -0.341777, -1.42644)
174637.110467458
normal
simd_float4x4([[0.101513, -0.988926, 0.108265, 0.0)], [0.920856, 0.134588, 0.365938, 0.0)], [-0.376456, 0.062549, 0.924321, 0.0)], [-8.7159, 1.16156, 8.89148, 1.0)]])
-8.7159, 1.16156, 8.89148
float3(-0.0625898, -0.386766, -1.43553)
174637.210523291
normal
simd_float4x4([[0.0772834, -0.987873, 0.134661, 0.0)], [0.906925, 0.12576, 0.402084, 0.0)], [-0.414143, 0.091053, 0.905646, 0.0)], [-8.95199, 1.16887, 9.07315, 1.0)]])
-8.95199, 1.16887, 9.07315
float3(-0.0911793, -0.4289, -1.44417)
174637.31057925
normal
simd_float4x4([[0.0665223, -0.991005, 0.116119, 0.0)], [0.89042, 0.111476, 0.441278, 0.0)], [-0.450253, 0.0740395, 0.889826, 0.0)], [-9.20651, 1.17261, 9.25949, 1.0)]])
-9.20651, 1.17261, 9.25949
float3(-0.0741074, -0.468437, -1.45878)
174637.410635
normal
simd_float4x4([[0.0346814, -0.993871, 0.104965, 0.0)], [0.866655, 0.0822125, 0.492087, 0.0)], [-0.4977, 0.0739021, 0.864195, 0.0)], [-9.46109, 1.17508, 9.43006, 1.0)]])
-9.46109, 1.17508, 9.43006
float3(-0.0739695, -0.52252, -1.48826)
174637.510691083
normal
simd_float4x4([[0.0195774, -0.994475, 0.103136, 0.0)], [0.824439, 0.0744147, 0.561038, 0.0)], [-0.565613, 0.0740455, 0.82134, 0.0)], [-9.73257, 1.17473, 9.60305, 1.0)]])
-9.73257, 1.17473, 9.60305
float3(-0.0741134, -0.603065, -1.49611)
174637.610746916
normal
simd_float4x4([[0.022075, -0.997202, 0.0714262, 0.0)], [0.765146, 0.0628351, 0.640783, 0.0)], [-0.643478, 0.0405062, 0.764392, 0.0)], [-10.0112, 1.18006, 9.77704, 1.0)]])
-10.0112, 1.18006, 9.77704
float3(-0.0405173, -0.699724, -1.50787)
174637.710802958
normal
simd_float4x4([[-0.00913093, -0.997122, 0.0752658, 0.0)], [0.695675, 0.0477334, 0.716769, 0.0)], [-0.718299, 0.0589053, 0.693237, 0.0)], [-10.2618, 1.19534, 9.89357, 1.0)]])
-10.2618, 1.19534, 9.89357
float3(-0.0589394, -0.803151, -1.52296)
174637.81085875
normal
simd_float4x4([[-0.0171615, -0.998221, 0.0570913, 0.0)], [0.63217, 0.0334053, 0.77411, 0.0)], [-0.77464, 0.0493762, 0.630472, 0.0)], [-10.5135, 1.22081, 9.98762, 1.0)]])
-10.5135, 1.22081, 9.98762
float3(-0.0493963, -0.887643, -1.53734)
174637.91091475
normal
simd_float4x4([[-0.0409711, -0.998388, 0.0392879, 0.0)], [0.573617, 0.00869208, 0.819077, 0.0)], [-0.818098, 0.0560947, 0.572336, 0.0)], [-10.801, 1.25206, 10.1174, 1.0)]])
-10.801, 1.25206, 10.1174
float3(-0.0561242, -0.960343, -1.56209)
174638.010970708
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.0434375, -0.998994, 0.0111207, 0.0)], [0.513587, -0.0127809, 0.857942, 0.0)], [-0.856938, 0.0429783, 0.513626, 0.0)], [-11.092, 1.28598, 10.2395, 1.0)]])
-11.092, 1.28598, 10.2395
float3(-0.0429915, -1.03084, -1.58359)
174638.1110265
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.0470259, -0.998872, -0.00663127, 0.0)], [0.484029, -0.0285938, 0.874585, 0.0)], [-0.873788, 0.0379184, 0.484827, 0.0)], [-11.3824, 1.31139, 10.3718, 1.0)]])
-11.3824, 1.31139, 10.3718
float3(-0.0379275, -1.06423, -1.59941)
174638.211082583
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.0431491, -0.999024, -0.00942758, 0.0)], [0.456069, -0.0280922, 0.889501, 0.0)], [-0.888898, 0.0340815, 0.456837, 0.0)], [-11.6633, 1.34782, 10.489, 1.0)]])
-11.6633, 1.34782, 10.489
float3(-0.0340881, -1.09606, -1.59891)
174638.311138375
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.0386789, -0.999201, -0.0100802, 0.0)], [0.42041, -0.0254239, 0.906978, 0.0)], [-0.90651, 0.0308431, 0.421057, 0.0)], [-11.9382, 1.39495, 10.6008, 1.0)]])
-11.9382, 1.39495, 10.6008
float3(-0.030848, -1.13596, -1.59624)
174638.411194333
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.0486911, -0.998799, 0.00545014, 0.0)], [0.368406, -0.0128873, 0.929576, 0.0)], [-0.928389, 0.04727, 0.368591, 0.0)], [-12.2179, 1.45144, 10.7108, 1.0)]])
-12.2179, 1.45144, 10.7108
float3(-0.0472876, -1.19286, -1.5837)
174638.511250166
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.0653686, -0.997757, 0.0143954, 0.0)], [0.323892, -0.00757039, 0.946064, 0.0)], [-0.943833, 0.0665054, 0.32366, 0.0)], [-12.5219, 1.48965, 10.8362, 1.0)]])
-12.5219, 1.48965, 10.8362
float3(-0.0665545, -1.24044, -1.57838)
174638.61130625
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.0678125, -0.997382, 0.0251278, 0.0)], [0.288228, 0.00452761, 0.957551, 0.0)], [-0.955158, 0.0721765, 0.287166, 0.0)], [-12.8182, 1.5443, 10.936, 1.0)]])
-12.8182, 1.5443, 10.936
float3(-0.0722393, -1.27875, -1.56626)
174638.711362125
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.0606683, -0.997949, 0.0204126, 0.0)], [0.277277, 0.00279589, 0.960786, 0.0)], [-0.958873, 0.0639492, 0.276539, 0.0)], [-13.151, 1.57074, 11.0554, 1.0)]])
-13.151, 1.57074, 11.0554
float3(-0.0639928, -1.29002, -1.56799)
174638.811418041
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.0446018, -0.998968, 0.00859292, 0.0)], [0.269317, -0.00374054, 0.963044, 0.0)], [-0.962018, 0.0452677, 0.269206, 0.0)], [-13.4772, 1.61349, 11.1509, 1.0)]])
-13.4772, 1.61349, 11.1509
float3(-0.0452832, -1.29794, -1.57454)
174638.911473916
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.012796, -0.999731, -0.0193364, 0.0)], [0.262866, -0.0220211, 0.964581, 0.0)], [-0.964748, 0.00725989, 0.263077, 0.0)], [-13.7993, 1.66416, 11.2407, 1.0)]])
-13.7993, 1.66416, 11.2407
float3(-0.00725996, -1.30458, -1.59282)
174639.011529958
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.0155129, -0.999239, -0.0357766, 0.0)], [0.274086, -0.03866, 0.960928, 0.0)], [-0.96158, 0.00510091, 0.274478, 0.0)], [-14.0789, 1.73542, 11.2771, 1.0)]])
-14.0789, 1.73542, 11.2771
float3(-0.00510093, -1.29275, -1.60947)
174639.111585916
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.0277913, -0.999291, -0.0253996, 0.0)], [0.289186, -0.0323602, 0.956726, 0.0)], [-0.95687, 0.0192435, 0.28988, 0.0)], [-14.2785, 1.83729, 11.2263, 1.0)]])
-14.2785, 1.83729, 11.2263
float3(-0.0192447, -1.27664, -1.60317)
174639.211641833
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.0341469, -0.998841, -0.0339273, 0.0)], [0.306033, -0.0427665, 0.95106, 0.0)], [-0.951409, 0.0220929, 0.307138, 0.0)], [-14.216, 2.02162, 10.9041, 1.0)]])
-14.216, 2.02162, 10.9041
float3(-0.0220947, -1.25853, -1.61359)
174639.311697833
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.0281459, -0.998863, -0.0384899, 0.0)], [0.327485, -0.0455942, 0.943756, 0.0)], [-0.944437, 0.013958, 0.328396, 0.0)], [-14.002, 2.20851, 10.4494, 1.0)]])
-14.002, 2.20851, 10.4494
float3(-0.0139584, -1.23616, -1.61641)
174639.41175375
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.0425045, -0.998845, -0.0224227, 0.0)], [0.341463, -0.0356147, 0.93922, 0.0)], [-0.938934, 0.0322646, 0.342582, 0.0)], [-13.7665, 2.38216, 10.0099, 1.0)]])
-13.7665, 2.38216, 10.0099
float3(-0.0322702, -1.22094, -1.60644)
174639.51180975
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.0375211, -0.99904, -0.0226179, 0.0)], [0.367051, -0.0348301, 0.929549, 0.0)], [-0.929444, 0.0265758, 0.368006, 0.0)], [-13.3162, 2.58876, 9.38788, 1.0)]])
-13.3162, 2.58876, 9.38788
float3(-0.0265789, -1.19379, -1.60565)
174639.611865625
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.0288376, -0.999435, -0.0172659, 0.0)], [0.396704, -0.0272976, 0.917541, 0.0)], [-0.917494, 0.0196102, 0.397267, 0.0)], [-12.6147, 2.80421, 8.57961, 1.0)]])
-12.6147, 2.80421, 8.57961
float3(-0.0196115, -1.16218, -1.5981)
174639.711921541
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.028305, -0.999587, 0.00494243, 0.0)], [0.405405, -0.00695991, 0.914111, 0.0)], [-0.913699, 0.0278776, 0.405434, 0.0)], [-11.6868, 3.01657, 7.60157, 1.0)]])
-11.6868, 3.01657, 7.60157
float3(-0.0278812, -1.15317, -1.57776)
174639.811977458
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.0389446, -0.998979, 0.0229128, 0.0)], [0.415578, 0.00466045, 0.909545, 0.0)], [-0.908723, 0.0449439, 0.414973, 0.0)], [-10.3745, 3.24043, 6.41228, 1.0)]])
-10.3745, 3.24043, 6.41228
float3(-0.0449591, -1.14242, -1.56613)
174639.912033458
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.0682834, -0.995347, 0.0679806, 0.0)], [0.422464, 0.0328814, 0.905783, 0.0)], [-0.903804, 0.0905693, 0.418253, 0.0)], [-8.67225, 3.48234, 5.11183, 1.0)]])
-8.67225, 3.48234, 5.11183
float3(-0.0906936, -1.13737, -1.53777)
174640.012089416
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.0773625, -0.993363, 0.0851168, 0.0)], [0.434013, 0.0433047, 0.899865, 0.0)], [-0.897579, 0.106558, 0.427782, 0.0)], [-6.86252, 3.68744, 3.90472, 1.0)]])
-6.86252, 3.68744, 3.90472
float3(-0.10676, -1.12605, -1.52723)
174640.112145458
limited(__ObjC.ARCamera.TrackingState.Reason.insufficientFeatures)
simd_float4x4([[-0.088071, -0.991791, 0.0927062, 0.0)], [0.43477, 0.0454619, 0.899393, 0.0)], [-0.896225, 0.119516, 0.427197, 0.0)], [-5.02293, 3.84686, 2.71059, 1.0)]])
-5.02293, 3.84686, 2.71059
float3(-0.119803, -1.12599, -1.52499)
174640.212201541
limited(__ObjC.ARCamera.TrackingState.Reason.insufficientFeatures)
simd_float4x4([[-0.0876859, -0.992746, 0.0822629, 0.0)], [0.423254, 0.0376264, 0.90523, 0.0)], [-0.901758, 0.114194, 0.416884, 0.0)], [-3.76641, 3.94643, 1.99155, 1.0)]])
-3.76641, 3.94643, 1.99155
float3(-0.114444, -1.13776, -1.53291)
174640.312257375
limited(__ObjC.ARCamera.TrackingState.Reason.insufficientFeatures)
simd_float4x4([[-0.0715454, -0.996887, 0.0331408, 0.0)], [0.419956, 3.08896e-05, 0.907544, 0.0)], [-0.90472, 0.0788483, 0.418647, 0.0)], [-1.60734, 4.0454, 0.81052, 1.0)]])
-1.60734, 4.0454, 0.81052
float3(-0.0789303, -1.1374, -1.57077)
174640.412313416
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.058331, -0.998292, -0.00311992, 0.0)], [0.430541, -0.0279762, 0.902138, 0.0)], [-0.900684, 0.0512793, 0.431437, 0.0)], [0.0449657, 4.08452, 0.0248624, 1.0)]])
0.0449657, 4.08452, 0.0248624
float3(-0.0513018, -1.12408, -1.59881)
174640.512369208
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.105383, -0.994399, 0.0081013, 0.0)], [0.437875, -0.0390869, 0.898186, 0.0)], [-0.892838, 0.0982005, 0.439542, 0.0)], [1.78403, 4.07181, -0.773082, 1.0)]])
1.78403, 4.07181, -0.773082
float3(-0.098359, -1.11333, -1.61008)
174640.612425208
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.114805, -0.993316, -0.0119356, 0.0)], [0.445158, -0.0621838, 0.89329, 0.0)], [-0.888062, 0.0972405, 0.449322, 0.0)], [2.61395, 4.05001, -1.42058, 1.0)]])
2.61395, 4.05001, -1.42058
float3(-0.0973944, -1.10239, -1.63332)
174640.712481083
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.133316, -0.990877, -0.019761, 0.0)], [0.455055, -0.0789134, 0.88696, 0.0)], [-0.880427, 0.109254, 0.461424, 0.0)], [3.47136, 4.02733, -1.78358, 1.0)]])
3.47136, 4.02733, -1.78358
float3(-0.109472, -1.08806, -1.65027)
174640.81253725
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.150318, -0.988564, -0.0120925, 0.0)], [0.452881, -0.0797259, 0.887999, 0.0)], [-0.878808, 0.128006, 0.459686, 0.0)], [4.26277, 3.91776, -2.20616, 1.0)]])
4.26277, 3.91776, -2.20616
float3(-0.128358, -1.08886, -1.65127)
174640.912593
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.13789, -0.99021, -0.0217081, 0.0)], [0.460173, -0.083458, 0.883898, 0.0)], [-0.877056, 0.111891, 0.467176, 0.0)], [4.68931, 3.78777, -2.42649, 1.0)]])
4.68931, 3.78777, -2.42649
float3(-0.112126, -1.08136, -1.65488)
174641.012649041
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.142692, -0.989713, -0.0103059, 0.0)], [0.462816, -0.0759233, 0.883197, 0.0)], [-0.874895, 0.121256, 0.468888, 0.0)], [5.05898, 3.56876, -2.46905, 1.0)]])
5.05898, 3.56876, -2.46905
float3(-0.121555, -1.07881, -1.64736)
174641.112704958
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.128357, -0.991408, -0.0251962, 0.0)], [0.469483, -0.0831234, 0.87902, 0.0)], [-0.873562, 0.100999, 0.476118, 0.0)], [5.07074, 3.29483, -2.20339, 1.0)]])
5.07074, 3.29483, -2.20339
float3(-0.101172, -1.07178, -1.65444)
174641.212761041
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.142094, -0.989846, -0.00381746, 0.0)], [0.481464, -0.0724835, 0.873463, 0.0)], [-0.864871, 0.122276, 0.486875, 0.0)], [4.91414, 3.19495, -1.9653, 1.0)]])
4.91414, 3.19495, -1.9653
float3(-0.122582, -1.05807, -1.64389)
174641.312817166
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.131705, -0.991281, 0.00388971, 0.0)], [0.48629, -0.0611898, 0.871652, 0.0)], [-0.863815, 0.116692, 0.490109, 0.0)], [4.66413, 3.07261, -1.6683, 1.0)]])
4.66413, 3.07261, -1.6683
float3(-0.116959, -1.05471, -1.63245)
174641.412872916
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.129124, -0.991628, -0.000859263, 0.0)], [0.480028, -0.0632648, 0.874969, 0.0)], [-0.867698, 0.112567, 0.484178, 0.0)], [4.25087, 2.9276, -1.24247, 1.0)]])
4.25087, 2.9276, -1.24247
float3(-0.112806, -1.06183, -1.63451)
174641.512928916
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.131799, -0.991212, -0.0113348, 0.0)], [0.470982, -0.0726785, 0.879144, 0.0)], [-0.872241, 0.110532, 0.476422, 0.0)], [3.64083, 2.78592, -0.656993, 1.0)]])
3.64083, 2.78592, -0.656993
float3(-0.110758, -1.07087, -1.64399)
174641.612984958
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.136124, -0.990569, -0.0155989, 0.0)], [0.46216, -0.0774215, 0.883411, 0.0)], [-0.876287, 0.113044, 0.46834, 0.0)], [2.86199, 2.64005, 0.0760871, 1.0)]])
2.86199, 2.64005, 0.0760871
float3(-0.113286, -1.07996, -1.6488)
174641.713040916
limited(__ObjC.ARCamera.TrackingState.Reason.excessiveMotion)
simd_float4x4([[-0.12746, -0.991668, -0.0186651, 0.0)], [0.458992, -0.075656, 0.885213, 0.0)], [-0.87925, 0.104262, 0.464811, 0.0)], [1.93202, 2.46703, 0.92171, 1.0)]])
1.93202, 2.46703, 0.92171
float3(-0.104452, -1.0845, -1.64694)
174641.813096916
limited(__ObjC.ARCamera.TrackingState.Reason.insufficientFeatures)
simd_float4x4([[-0.125315, -0.991864, -0.0224149, 0.0)], [0.453003, -0.0773048, 0.888151, 0.0)], [-0.882658, 0.101144, 0.459005, 0.0)], [1.23393, 2.32385, 1.51176, 1.0)]])
1.23393, 2.32385, 1.51176
float3(-0.101318, -1.09126, -1.64858)
174641.913152833
limited(__ObjC.ARCamera.TrackingState.Reason.insufficientFeatures)
simd_float4x4([[-0.124311, -0.992003, -0.021815, 0.0)], [0.451829, -0.0761668, 0.888847, 0.0)], [-0.883401, 0.100637, 0.457684, 0.0)], [0.574052, 2.18458, 2.09024, 1.0)]])
0.574052, 2.18458, 2.09024
float3(-0.100808, -1.09278, -1.64743)
174642.013208875
limited(__ObjC.ARCamera.TrackingState.Reason.insufficientFeatures)
simd_float4x4([[-0.120212, -0.99256, -0.0193312, 0.0)], [0.453536, -0.0722301, 0.888306, 0.0)], [-0.883093, 0.098018, 0.458845, 0.0)], [0.376182, 2.14454, 2.19966, 1.0)]])
0.376182, 2.14454, 2.19966
float3(-0.0981757, -1.0916, -1.64344)
174642.113264791
limited(__ObjC.ARCamera.TrackingState.Reason.insufficientFeatures)
simd_float4x4([[-0.116853, -0.992938, -0.0204814, 0.0)], [0.460798, -0.0724739, 0.884541, 0.0)], [-0.879779, 0.0939232, 0.466012, 0.0)], [0.385661, 2.11688, 2.16712, 1.0)]])
0.385661, 2.11688, 2.16712
float3(-0.0940619, -1.08368, -1.64366)
174642.21332075
normal
simd_float4x4([[-0.109669, -0.993695, -0.0233057, 0.0)], [0.470035, -0.0725067, 0.879665, 0.0)], [-0.875808, 0.0855176, 0.475023, 0.0)], [0.425672, 2.10289, 2.11424, 1.0)]])
0.425672, 2.10289, 2.11424
float3(-0.0856222, -1.07382, -1.64363)
174642.313376833
normal
simd_float4x4([[-0.107481, -0.994024, -0.0190686, 0.0)], [0.476005, -0.0682885, 0.876787, 0.0)], [-0.87285, 0.0851608, 0.480501, 0.0)], [0.433145, 2.09566, 2.09121, 1.0)]])
0.433145, 2.09566, 2.09121
float3(-0.0852641, -1.06757, -1.63939)
174642.413432833
normal
simd_float4x4([[-0.108513, -0.99404, -0.0105052, 0.0)], [0.479415, -0.0615862, 0.875425, 0.0)], [-0.870854, 0.0899584, 0.48324, 0.0)], [0.517884, 2.086, 2.00795, 1.0)]])
0.517884, 2.086, 2.00795
float3(-0.0900802, -1.0642, -1.63267)
174642.51348875
normal
simd_float4x4([[-0.0973497, -0.99519, -0.0109246, 0.0)], [0.480305, -0.0565917, 0.875274, 0.0)], [-0.871682, 0.0799605, 0.483504, 0.0)], [0.636662, 2.07684, 1.90425, 1.0)]])
0.636662, 2.07684, 1.90425
float3(-0.080046, -1.06437, -1.6276)
174642.613544875
normal
simd_float4x4([[-0.0780123, -0.996947, -0.00328085, 0.0)], [0.47902, -0.0403696, 0.876875, 0.0)], [-0.87433, 0.0668355, 0.480707, 0.0)], [0.714768, 2.07192, 1.82188, 1.0)]])
0.714768, 2.07192, 1.82188
float3(-0.0668853, -1.06811, -1.61127)
174642.713600625
normal
simd_float4x4([[-0.0742854, -0.997234, 0.00263903, 0.0)], [0.478523, -0.0333238, 0.877443, 0.0)], [-0.874927, 0.066444, 0.479674, 0.0)], [0.811576, 2.06496, 1.72948, 1.0)]])
0.811576, 2.06496, 1.72948
float3(-0.066493, -1.0693, -1.6042)
174642.813656666
normal
simd_float4x4([[-0.0776277, -0.996968, 0.0052883, 0.0)], [0.478736, -0.0326224, 0.877353, 0.0)], [-0.87452, 0.0706386, 0.479817, 0.0)], [0.884466, 2.06042, 1.65768, 1.0)]])
0.884466, 2.06042, 1.65768
float3(-0.0706974, -1.06898, -1.60351)
174642.913712583
normal
simd_float4x4([[-0.0791351, -0.996858, 0.00348675, 0.0)], [0.482553, -0.0352462, 0.875157, 0.0)], [-0.872284, 0.0709382, 0.483826, 0.0)], [0.938974, 2.05696, 1.60042, 1.0)]])
0.938974, 2.05696, 1.60042
float3(-0.0709978, -1.06438, -1.60614)
174643.013768625
normal
simd_float4x4([[-0.0810486, -0.9967, 0.004471, 0.0)], [0.498431, -0.0366455, 0.866154, 0.0)], [-0.863133, 0.0724291, 0.499756, 0.0)], [0.984053, 2.0521, 1.54348, 1.0)]])
0.984053, 2.0521, 1.54348
float3(-0.0724926, -1.04596, -1.60755)
174643.113824541
normal
simd_float4x4([[-0.072807, -0.997336, 0.00446515, 0.0)], [0.533992, -0.0352002, 0.844757, 0.0)], [-0.842349, 0.0638885, 0.535132, 0.0)], [1.00713, 2.04907, 1.49578, 1.0)]])
1.00713, 2.04907, 1.49578
float3(-0.0639321, -1.00483, -1.60608)
174643.213880666
normal
simd_float4x4([[-0.0690327, -0.997604, 0.00462234, 0.0)], [0.585587, -0.0367697, 0.809775, 0.0)], [-0.807665, 0.0586078, 0.586722, 0.0)], [1.02072, 2.04666, 1.4535, 1.0)]])
1.02072, 2.04666, 1.4535
float3(-0.0586414, -0.942544, -1.60764)
174643.313936583
normal
simd_float4x4([[-0.0639882, -0.99792, 0.00778546, 0.0)], [0.645925, -0.0354683, 0.762577, 0.0)], [-0.760715, 0.0538247, 0.646851, 0.0)], [1.02154, 2.04355, 1.41411, 1.0)]])
1.02154, 2.04355, 1.41411
float3(-0.0538508, -0.866117, -1.60632)
174643.413992666
normal
simd_float4x4([[-0.0614768, -0.998015, 0.0136278, 0.0)], [0.704945, -0.03375, 0.708459, 0.0)], [-0.706593, 0.0531606, 0.705621, 0.0)], [1.00584, 2.02692, 1.38617, 1.0)]])
1.00584, 2.02692, 1.38617
float3(-0.0531856, -0.786086, -1.6046)
174643.51404875
normal
simd_float4x4([[-0.0565999, -0.998237, 0.0178618, 0.0)], [0.760656, -0.0315273, 0.648389, 0.0)], [-0.646683, 0.0502854, 0.7611, 0.0)], [0.993886, 2.01338, 1.36374, 1.0)]])
0.993886, 2.01338, 1.36374
float3(-0.0503066, -0.704302, -1.60237)
174643.61410475
normal
simd_float4x4([[-0.0507145, -0.99848, 0.0215975, 0.0)], [0.811088, -0.0285595, 0.584227, 0.0)], [-0.582722, 0.0471462, 0.811303, 0.0)], [0.989405, 2.00503, 1.33753, 1.0)]])
0.989405, 2.00503, 1.33753
float3(-0.0471637, -0.622873, -1.59939)
174643.714160791
normal
simd_float4x4([[-0.0474389, -0.998591, 0.0237887, 0.0)], [0.853265, -0.0281304, 0.520718, 0.0)], [-0.519315, 0.0450004, 0.853397, 0.0)], [0.992273, 2.00197, 1.30228, 1.0)]])
0.992273, 2.00197, 1.30228
float3(-0.0450156, -0.546666, -1.59896)
174643.814216666
normal
simd_float4x4([[-0.0461661, -0.998555, 0.0275109, 0.0)], [0.887812, -0.0283913, 0.45933, 0.0)], [-0.457885, 0.04563, 0.88784, 0.0)], [0.986047, 2.00197, 1.26646, 1.0)]])
0.986047, 2.00197, 1.26646
float3(-0.0456458, -0.476152, -1.59922)
174643.91427275
normal
simd_float4x4([[-0.0417226, -0.99872, 0.0286085, 0.0)], [0.914191, -0.026607, 0.404409, 0.0)], [-0.40313, 0.0430267, 0.914131, 0.0)], [0.968795, 2.00525, 1.23553, 1.0)]])
0.968795, 2.00525, 1.23553
float3(-0.0430399, -0.415343, -1.59743)
174644.014328666
normal
simd_float4x4([[-0.0383563, -0.998873, 0.0279458, 0.0)], [0.931906, -0.0256629, 0.36179, 0.0)], [-0.360665, 0.0399197, 0.931841, 0.0)], [0.944456, 2.01147, 1.19164, 1.0)]])
0.944456, 2.01147, 1.19164
float3(-0.0399304, -0.36929, -1.59648)
174644.114384666
normal
simd_float4x4([[-0.0354188, -0.998976, 0.0281506, 0.0)], [0.942336, -0.0240042, 0.333805, 0.0)], [-0.332788, 0.0383504, 0.942222, 0.0)], [0.920114, 2.01815, 1.15204, 1.0)]])
0.920114, 2.01815, 1.15204
float3(-0.0383598, -0.339518, -1.59482)
174644.214440583
normal
simd_float4x4([[-0.0352657, -0.999009, 0.0271404, 0.0)], [0.946631, -0.0246859, 0.321373, 0.0)], [-0.320385, 0.0370254, 0.946564, 0.0)], [0.901724, 2.02374, 1.12365, 1.0)]])
0.901724, 2.02374, 1.12365
float3(-0.0370339, -0.326367, -1.5955)
174644.314496666
normal
simd_float4x4([[-0.0383689, -0.998865, 0.028204, 0.0)], [0.943409, -0.0269056, 0.330539, 0.0)], [-0.329405, 0.0392904, 0.943371, 0.0)], [0.888937, 2.02895, 1.10425, 1.0)]])
0.888937, 2.02895, 1.10425
float3(-0.0393005, -0.335943, -1.59773)
174644.414552583
normal
simd_float4x4([[-0.0436992, -0.998478, 0.0336466, 0.0)], [0.932295, -0.0286524, 0.360563, 0.0)], [-0.35905, 0.0471248, 0.932128, 0.0)], [0.8869, 2.0355, 1.09579, 1.0)]])
0.8869, 2.0355, 1.09579
float3(-0.0471423, -0.367678, -1.59948)
174644.514608666
normal
simd_float4x4([[-0.0426912, -0.998416, 0.0366412, 0.0)], [0.911907, -0.0239565, 0.409698, 0.0)], [-0.408172, 0.0509038, 0.911485, 0.0)], [0.894391, 2.04341, 1.10318, 1.0)]])
0.894391, 2.04341, 1.10318
float3(-0.0509258, -0.421031, -1.59479)
174644.614664791
normal
simd_float4x4([[-0.0454096, -0.998202, 0.0391122, 0.0)], [0.881445, -0.0216121, 0.471792, 0.0)], [-0.470098, 0.0558991, 0.880842, 0.0)], [0.907427, 2.05131, 1.1192, 1.0)]])
0.907427, 2.05131, 1.1192
float3(-0.0559282, -0.490237, -1.59244)
174644.71472075
normal
simd_float4x4([[-0.049329, -0.998054, 0.0381525, 0.0)], [0.840594, -0.0208557, 0.541264, 0.0)], [-0.539415, 0.0587708, 0.839987, 0.0)], [0.922842, 2.05854, 1.13975, 1.0)]])
0.922842, 2.05854, 1.13975
float3(-0.0588046, -0.570852, -1.59169)
174644.81477675
normal
simd_float4x4([[-0.054114, -0.997848, 0.0370201, 0.0)], [0.791559, -0.0202677, 0.610757, 0.0)], [-0.608693, 0.0623541, 0.790952, 0.0)], [0.938298, 2.06577, 1.16296, 1.0)]])
0.938298, 2.06577, 1.16296
float3(-0.0623946, -0.655908, -1.5911)
174644.91483275
normal
simd_float4x4([[-0.0601216, -0.997619, 0.0337891, 0.0)], [0.738592, -0.0216897, 0.673804, 0.0)], [-0.671467, 0.0654665, 0.738137, 0.0)], [0.95262, 2.07332, 1.18954, 1.0)]])
0.95262, 2.07332, 1.18954
float3(-0.0655134, -0.738136, -1.59253)
174645.014888916
normal
simd_float4x4([[-0.0614547, -0.997728, 0.0275887, 0.0)], [0.68484, -0.0220422, 0.72836, 0.0)], [-0.726098, 0.063655, 0.684639, 0.0)], [0.963916, 2.08037, 1.21553, 1.0)]])
0.963916, 2.08037, 1.21553
float3(-0.063698, -0.814778, -1.59289)
174645.11494475
normal
simd_float4x4([[-0.0648015, -0.997554, 0.0262043, 0.0)], [0.632027, -0.0207073, 0.77467, 0.0)], [-0.772232, 0.0667616, 0.631823, 0.0)], [0.975349, 2.0858, 1.23824, 1.0)]])
0.975349, 2.0858, 1.23824
float3(-0.0668113, -0.885069, -1.59155)
174645.21500075
normal
simd_float4x4([[-0.0680886, -0.997393, 0.0239135, 0.0)], [0.57978, -0.0200505, 0.814527, 0.0)], [-0.811923, 0.0693245, 0.579633, 0.0)], [0.983102, 2.09095, 1.25857, 1.0)]])
0.983102, 2.09095, 1.25857
float3(-0.0693801, -0.950801, -1.5909)
174645.315056708
normal
simd_float4x4([[-0.0687077, -0.997445, 0.0195618, 0.0)], [0.530572, -0.0199285, 0.847406, 0.0)], [-0.844851, 0.0686022, 0.530585, 0.0)], [0.990047, 2.09593, 1.28068, 1.0)]])
0.990047, 2.09593, 1.28068
float3(-0.0686561, -1.01003, -1.59077)
174645.415112875
normal
simd_float4x4([[-0.0690171, -0.997424, 0.0195659, 0.0)], [0.517842, -0.019055, 0.855264, 0.0)], [-0.852688, 0.0691599, 0.517822, 0.0)], [1.02505, 2.02885, 1.32719, 1.0)]])
1.02505, 2.02885, 1.32719
float3(-0.0692152, -1.02504, -1.5899)
174645.515168833
normal
simd_float4x4([[-0.0689353, -0.997397, 0.0211433, 0.0)], [0.469393, -0.0137264, 0.882883, 0.0)], [-0.880294, 0.0707862, 0.469118, 0.0)], [1.0282, 2.03048, 1.33897, 1.0)]])
1.0282, 2.03048, 1.33897
float3(-0.0708455, -1.08117, -1.58456)
174645.615224958
normal
simd_float4x4([[-0.0693815, -0.997404, 0.0192534, 0.0)], [0.419567, -0.0116651, 0.907649, 0.0)], [-0.905069, 0.0710522, 0.419288, 0.0)], [1.03067, 2.03275, 1.3505, 1.0)]])
1.03067, 2.03275, 1.3505
float3(-0.0711121, -1.13697, -1.58249)
174645.715281041
normal
simd_float4x4([[-0.0716128, -0.997274, 0.0177726, 0.0)], [0.368616, -0.00990441, 0.929529, 0.0)], [-0.926819, 0.0731175, 0.36832, 0.0)], [1.0334, 2.03474, 1.35934, 1.0)]])
1.0334, 2.03474, 1.35934
float3(-0.0731828, -1.19253, -1.58073)
174645.815336958
normal
simd_float4x4([[-0.0741743, -0.99713, 0.0151876, 0.0)], [0.317231, -0.00915416, 0.948304, 0.0)], [-0.945443, 0.0751578, 0.316999, 0.0)], [1.03469, 2.03642, 1.36933, 1.0)]])
1.03469, 2.03642, 1.36933
float3(-0.0752287, -1.24728, -1.57998)
174645.915393125
normal
simd_float4x4([[-0.0795032, -0.996796, 0.00882, 0.0)], [0.264939, -0.0125998, 0.964183, 0.0)], [-0.960982, 0.0789924, 0.265092, 0.0)], [1.03557, 2.03613, 1.37996, 1.0)]])
1.03557, 2.03613, 1.37996
float3(-0.0790747, -1.30164, -1.58344)
174646.015448958
normal
simd_float4x4([[-0.087418, -0.996169, 0.0023194, 0.0)], [0.212102, -0.0163378, 0.977111, 0.0)], [-0.97333, 0.085909, 0.212718, 0.0)], [1.03551, 2.03357, 1.3889, 1.0)]])
1.03551, 2.03357, 1.3889
float3(-0.086015, -1.35563, -1.5872)
174646.115505041
normal
simd_float4x4([[-0.0951869, -0.995447, -0.0049987, 0.0)], [0.160236, -0.0202777, 0.986871, 0.0)], [-0.982478, 0.0931361, 0.161436, 0.0)], [1.03543, 2.03128, 1.39431, 1.0)]])
1.03543, 2.03128, 1.39431
float3(-0.0932713, -1.40794, -1.59116)
174646.215561
normal
simd_float4x4([[-0.0992807, -0.994969, -0.0134038, 0.0)], [0.119588, -0.0253034, 0.992501, 0.0)], [-0.987847, 0.0969332, 0.121498, 0.0)], [1.03275, 2.02793, 1.39746, 1.0)]])
1.03275, 2.02793, 1.39746
float3(-0.0970857, -1.44842, -1.59622)
174646.315617083
normal
simd_float4x4([[-0.104813, -0.994321, -0.018424, 0.0)], [0.0936417, -0.0283112, 0.995203, 0.0)], [-0.990074, 0.102585, 0.0960774, 0.0)], [1.03132, 2.02353, 1.39556, 1.0)]])
1.03132, 2.02353, 1.39556
float3(-0.102766, -1.47406, -1.59926)
174646.415673166
normal
simd_float4x4([[-0.110918, -0.993611, -0.0208224, 0.0)], [0.0937702, -0.0313214, 0.995101, 0.0)], [-0.989396, 0.108423, 0.0966453, 0.0)], [1.03355, 2.01847, 1.38477, 1.0)]])
1.03355, 2.01847, 1.38477
float3(-0.108636, -1.47342, -1.60231)
174646.515729125
normal
simd_float4x4([[-0.121631, -0.992371, -0.0201589, 0.0)], [0.119205, -0.0347672, 0.992261, 0.0)], [-0.985391, 0.118287, 0.122524, 0.0)], [1.04225, 2.01253, 1.36258, 1.0)]])
1.04225, 2.01253, 1.36258
float3(-0.118565, -1.44709, -1.60582)
174646.615785083
normal
simd_float4x4([[-0.118467, -0.992675, -0.0236919, 0.0)], [0.166308, -0.043359, 0.98512, 0.0)], [-0.978932, 0.112764, 0.170226, 0.0)], [1.05371, 2.00516, 1.33486, 1.0)]])
1.05371, 2.00516, 1.33486
float3(-0.113005, -1.39863, -1.61445)
174646.715841291
normal
simd_float4x4([[-0.139648, -0.989921, -0.023537, 0.0)], [0.22411, -0.0547504, 0.973025, 0.0)], [-0.964507, 0.130606, 0.229497, 0.0)], [1.07879, 1.99771, 1.30054, 1.0)]])
1.07879, 1.99771, 1.30054
float3(-0.13098, -1.3372, -1.62605)
174646.815897458
normal
simd_float4x4([[-0.157548, -0.987472, -0.00875078, 0.0)], [0.281445, -0.0533941, 0.958091, 0.0)], [-0.946556, 0.148483, 0.286331, 0.0)], [1.11141, 1.99408, 1.26044, 1.0)]])
1.11141, 1.99408, 1.26044
float3(-0.149034, -1.27705, -1.62482)
174646.915953375
normal
simd_float4x4([[-0.157155, -0.987574, 0.000535674, 0.0)], [0.332608, -0.0524179, 0.941607, 0.0)], [-0.929879, 0.148157, 0.336712, 0.0)], [1.14856, 1.99032, 1.22417, 1.0)]])
1.14856, 1.99032, 1.22417
float3(-0.148704, -1.22338, -1.62382)
174647.016009416
normal
simd_float4x4([[-0.161284, -0.986892, 0.00556681, 0.0)], [0.374047, -0.0559072, 0.925723, 0.0)], [-0.913278, 0.151386, 0.378161, 0.0)], [1.19914, 1.98447, 1.19278, 1.0)]])
1.19914, 1.98447, 1.19278
float3(-0.15197, -1.17822, -1.62739)
174647.11606525
normal
simd_float4x4([[-0.159339, -0.987035, 0.0193237, 0.0)], [0.405526, -0.0475938, 0.912844, 0.0)], [-0.900089, 0.153288, 0.407852, 0.0)], [1.25877, 1.98013, 1.1601, 1.0)]])
1.25877, 1.98013, 1.1601
float3(-0.153895, -1.14535, -1.61898)
174647.216121458
normal
simd_float4x4([[-0.153801, -0.987676, 0.0289968, 0.0)], [0.43738, -0.0417359, 0.898308, 0.0)], [-0.886027, 0.150844, 0.438409, 0.0)], [1.32845, 1.9834, 1.13118, 1.0)]])
1.32845, 1.9834, 1.13118
float3(-0.151422, -1.11131, -1.61303)
174647.316177458
normal
simd_float4x4([[-0.134848, -0.990258, 0.0347184, 0.0)], [0.466684, -0.0325636, 0.883825, 0.0)], [-0.874084, 0.135385, 0.466528, 0.0)], [1.39728, 1.99073, 1.10167, 1.0)]])
1.39728, 1.99073, 1.10167
float3(-0.135802, -1.08053, -1.60367)
174647.4162335
normal
simd_float4x4([[-0.114887, -0.992056, 0.0512431, 0.0)], [0.483308, -0.010754, 0.875385, 0.0)], [-0.867879, 0.125337, 0.480704, 0.0)], [1.46517, 2.00294, 1.07132, 1.0)]])
1.46517, 2.00294, 1.07132
float3(-0.125667, -1.06498, -1.58164)
174647.516289541
normal
simd_float4x4([[-0.106054, -0.992697, 0.0574878, 0.0)], [0.494466, -0.00249042, 0.869193, 0.0)], [-0.862703, 0.120607, 0.491119, 0.0)], [1.52895, 2.0111, 1.04117, 1.0)]])
1.52895, 2.0111, 1.04117
float3(-0.120902, -1.05327, -1.57331)
174647.616345666
normal
simd_float4x4([[-0.101614, -0.991711, 0.0786332, 0.0)], [0.497802, 0.0177472, 0.867109, 0.0)], [-0.861318, 0.127254, 0.491872, 0.0)], [1.59548, 2.01667, 1.00587, 1.0)]])
1.59548, 2.01667, 1.00587
float3(-0.1276, -1.05192, -1.5529)
174647.716401666
normal
simd_float4x4([[-0.0974091, -0.991042, 0.0913626, 0.0)], [0.496407, 0.0311846, 0.86753, 0.0)], [-0.862608, 0.129858, 0.488922, 0.0)], [1.6639, 2.01729, 0.969882, 1.0)]])
1.6639, 2.01729, 0.969882
float3(-0.130226, -1.05515, -1.53934)
174647.816457666
normal
simd_float4x4([[-0.0969072, -0.991549, 0.0862554, 0.0)], [0.48764, 0.0282483, 0.872588, 0.0)], [-0.86765, 0.126622, 0.480781, 0.0)], [1.73765, 2.01301, 0.931442, 1.0)]])
1.73765, 2.01301, 0.931442
float3(-0.126962, -1.0648, -1.54231)
174647.916513875
normal
simd_float4x4([[-0.0942556, -0.99305, 0.0704761, 0.0)], [0.470206, 0.0179917, 0.882373, 0.0)], [-0.877509, 0.116307, 0.465243, 0.0)], [1.81065, 2.00768, 0.887202, 1.0)]])
1.81065, 2.00768, 0.887202
float3(-0.116571, -1.08329, -1.55268)
174648.016569875
normal
simd_float4x4([[-0.0524527, -0.99752, 0.046927, 0.0)], [0.424951, 0.0202289, 0.90499, 0.0)], [-0.903696, 0.0674108, 0.422836, 0.0)], [1.87345, 2.01073, 0.842414, 1.0)]])
1.87345, 2.01073, 0.842414
float3(-0.067462, -1.13316, -1.55052)
174648.116625916
normal
simd_float4x4([[-0.0537714, -0.998533, 0.00639557, 0.0)], [0.420607, -0.01684, 0.907087, 0.0)], [-0.905648, 0.0514654, 0.420896, 0.0)], [1.94313, 2.01821, 0.803325, 1.0)]])
1.94313, 2.01821, 0.803325
float3(-0.0514881, -1.13575, -1.58766)
174648.216681875
normal
simd_float4x4([[-0.0709611, -0.997456, 0.00676635, 0.0)], [0.42212, -0.023883, 0.906225, 0.0)], [-0.903758, 0.0671629, 0.422741, 0.0)], [2.0109, 2.02302, 0.754446, 1.0)]])
2.0109, 2.02302, 0.754446
float3(-0.0672135, -1.13327, -1.59474)
174648.316738083
normal
simd_float4x4([[-0.0989266, -0.99503, -0.0113893, 0.0)], [0.428992, -0.0529724, 0.901754, 0.0)], [-0.897875, 0.0843215, 0.4321, 0.0)], [2.08442, 2.02832, 0.713463, 1.0)]])
2.08442, 2.02832, 0.713463
float3(-0.0844217, -1.12226, -1.62398)
174648.416794
normal
simd_float4x4([[-0.0889411, -0.995826, -0.0204847, 0.0)], [0.434488, -0.0572957, 0.898853, 0.0)], [-0.896275, 0.0710447, 0.437771, 0.0)], [2.15005, 2.02659, 0.674135, 1.0)]])
2.15005, 2.02659, 0.674135
float3(-0.0711046, -1.11644, -1.62827)
174648.516850208
normal
simd_float4x4([[-0.105222, -0.99433, -0.0153443, 0.0)], [0.44101, -0.060487, 0.895462, 0.0)], [-0.891313, 0.0874551, 0.444874, 0.0)], [2.23414, 2.01797, 0.637958, 1.0)]])
2.23414, 2.01797, 0.637958
float3(-0.0875669, -1.10785, -1.63155)
174648.616906
normal
simd_float4x4([[-0.100059, -0.994756, -0.021183, 0.0)], [0.442683, -0.0635745, 0.894422, 0.0)], [-0.891078, 0.080118, 0.446723, 0.0)], [2.31702, 2.01225, 0.612764, 1.0)]])
2.31702, 2.01225, 0.612764
float3(-0.080204, -1.10609, -1.63462)
174648.716962208
normal
simd_float4x4([[-0.0908791, -0.995745, -0.0152507, 0.0)], [0.456068, -0.0552281, 0.88823, 0.0)], [-0.885293, 0.0737661, 0.459147, 0.0)], [2.40025, 2.01547, 0.589278, 1.0)]])
2.40025, 2.01547, 0.589278
float3(-0.0738332, -1.09235, -1.6262)
174648.817018083
normal
simd_float4x4([[-0.097004, -0.995276, 0.00396067, 0.0)], [0.456561, -0.0409617, 0.888749, 0.0)], [-0.884388, 0.0880205, 0.458378, 0.0)], [2.48365, 2.02683, 0.562803, 1.0)]])
2.48365, 2.02683, 0.562803
float3(-0.0881345, -1.09262, -1.61193)
174648.917074375
normal
simd_float4x4([[-0.0976174, -0.995169, 0.0104712, 0.0)], [0.459571, -0.0357424, 0.887422, 0.0)], [-0.88276, 0.0914401, 0.46084, 0.0)], [2.56066, 2.03434, 0.536564, 1.0)]])
2.56066, 2.03434, 0.536564
float3(-0.091568, -1.08967, -1.6067)
174649.0171305
normal
simd_float4x4([[-0.121326, -0.991607, 0.0446787, 0.0)], [0.468322, -0.0174981, 0.883385, 0.0)], [-0.875188, 0.128102, 0.466514, 0.0)], [2.64206, 2.04059, 0.499731, 1.0)]])
2.64206, 2.04059, 0.499731
float3(-0.128455, -1.08106, -1.58844)
174649.117186333
normal
simd_float4x4([[-0.123343, -0.990629, 0.0586577, 0.0)], [0.47485, -0.00701425, 0.880039, 0.0)], [-0.871381, 0.1364, 0.471265, 0.0)], [2.72579, 2.03575, 0.462184, 1.0)]])
2.72579, 2.03575, 0.462184
float3(-0.136827, -1.07502, -1.57788)
174649.217242583
normal
simd_float4x4([[-0.124463, -0.99071, 0.0547959, 0.0)], [0.466068, -0.00961986, 0.884697, 0.0)], [-0.875951, 0.135651, 0.462935, 0.0)], [2.81382, 2.02493, 0.423256, 1.0)]])
2.81382, 2.02493, 0.423256
float3(-0.13607, -1.08461, -1.58051)
174649.3172985
normal
simd_float4x4([[-0.106763, -0.993433, 0.0411359, 0.0)], [0.443691, -0.0105768, 0.896118, 0.0)], [-0.889798, 0.113924, 0.441907, 0.0)], [2.88943, 2.02397, 0.386796, 1.0)]])
2.88943, 2.02397, 0.386796
float3(-0.114172, -1.10984, -1.58144)
174649.417354583
normal
simd_float4x4([[-0.126176, -0.991347, 0.0361947, 0.0)], [0.429104, -0.0216461, 0.902996, 0.0)], [-0.894399, 0.129468, 0.428122, 0.0)], [2.96447, 2.03381, 0.349581, 1.0)]])
2.96447, 2.03381, 0.349581
float3(-0.129832, -1.12436, -1.59263)
174649.517410583
normal
simd_float4x4([[-0.105041, -0.993958, 0.0318482, 0.0)], [0.421938, -0.0155448, 0.906492, 0.0)], [-0.900519, 0.108657, 0.421022, 0.0)], [3.02235, 2.04256, 0.319461, 1.0)]])
3.02235, 2.04256, 0.319461
float3(-0.108872, -1.13346, -1.58643)
174649.617466708
normal
simd_float4x4([[-0.142213, -0.98929, 0.0328708, 0.0)], [0.411161, -0.0288324, 0.911107, 0.0)], [-0.900401, 0.143086, 0.410858, 0.0)], [3.09062, 2.04711, 0.292388, 1.0)]])
3.09062, 2.04711, 0.292388
float3(-0.143579, -1.14271, -1.59993)
174649.717522791
normal
simd_float4x4([[-0.141352, -0.989851, 0.0146737, 0.0)], [0.409516, -0.0449718, 0.911194, 0.0)], [-0.901286, 0.134808, 0.411717, 0.0)], [3.15163, 2.04242, 0.274196, 1.0)]])
3.15163, 2.04242, 0.274196
float3(-0.13522, -1.14229, -1.6162)
174649.817578958
normal
simd_float4x4([[-0.146273, -0.98922, 0.00693554, 0.0)], [0.409411, -0.0541533, 0.910741, 0.0)], [-0.900548, 0.136057, 0.412919, 0.0)], [3.22185, 2.0319, 0.259744, 1.0)]])
3.22185, 2.0319, 0.259744
float3(-0.13648, -1.14088, -1.62549)
174649.917634875
normal
simd_float4x4([[-0.131972, -0.991249, -0.00279675, 0.0)], [0.411164, -0.057308, 0.909758, 0.0)], [-0.901958, 0.118913, 0.415129, 0.0)], [3.30784, 2.02449, 0.243737, 1.0)]])
3.30784, 2.02449, 0.243737
float3(-0.119195, -1.13945, -1.62855)
174650.017691125
normal
simd_float4x4([[-0.125496, -0.991963, -0.0161045, 0.0)], [0.423041, -0.0681892, 0.903541, 0.0)], [-0.897378, 0.106578, 0.428199, 0.0)], [3.39447, 2.02381, 0.233864, 1.0)]])
3.39447, 2.02381, 0.233864
float3(-0.106781, -1.12558, -1.63943)
174650.117747083
normal
simd_float4x4([[-0.138096, -0.990408, -0.00452236, 0.0)], [0.418482, -0.0624878, 0.906073, 0.0)], [-0.897665, 0.123233, 0.423098, 0.0)], [3.48597, 2.0372, 0.21549, 1.0)]])
3.48597, 2.0372, 0.21549
float3(-0.123547, -1.13035, -1.63381)
174650.21780325
normal
simd_float4x4([[-0.145577, -0.989314, 0.00806097, 0.0)], [0.415565, -0.0537519, 0.907974, 0.0)], [-0.897838, 0.13553, 0.41895, 0.0)], [3.57002, 2.04591, 0.189281, 1.0)]])
3.57002, 2.04591, 0.189281
float3(-0.135948, -1.13421, -1.62508)
174650.317859333
normal
simd_float4x4([[-0.158895, -0.986037, 0.0498329, 0.0)], [0.412413, -0.0204293, 0.910768, 0.0)], [-0.897033, 0.165268, 0.409901, 0.0)], [3.6581, 2.05241, 0.151689, 1.0)]])
3.6581, 2.05241, 0.151689
float3(-0.16603, -1.14218, -1.59151)
174650.417915208
normal
simd_float4x4([[-0.149954, -0.987418, 0.0502015, 0.0)], [0.407305, -0.0154292, 0.913162, 0.0)], [-0.900897, 0.15738, 0.404494, 0.0)], [3.74779, 2.05123, 0.123201, 1.0)]])
3.74779, 2.05123, 0.123201
float3(-0.158037, -1.14878, -1.58642)
174650.5179715
normal
simd_float4x4([[-0.143337, -0.98881, 0.0413343, 0.0)], [0.390048, -0.0180571, 0.920618, 0.0)], [-0.90957, 0.14808, 0.388272, 0.0)], [3.83676, 2.04431, 0.0901524, 1.0)]])
3.83676, 2.04431, 0.0901524
float3(-0.148627, -1.16734, -1.58906)
174650.6180275
normal
simd_float4x4([[-0.126078, -0.991709, 0.0248724, 0.0)], [0.369427, -0.0236673, 0.928958, 0.0)], [-0.920667, 0.126309, 0.369348, 0.0)], [3.92088, 2.04366, 0.0538992, 1.0)]])
3.92088, 2.04366, 0.0538992
float3(-0.126648, -1.18928, -1.59466)
174650.718083625
normal
simd_float4x4([[-0.128553, -0.991664, 0.00879711, 0.0)], [0.37146, -0.0399249, 0.92759, 0.0)], [-0.919506, 0.122512, 0.373495, 0.0)], [4.00289, 2.05547, 0.0110722, 1.0)]])
4.00289, 2.05547, 0.0110722
float3(-0.122821, -1.18496, -1.61104)
174650.818139583
normal
simd_float4x4([[-0.113795, -0.993316, 0.0193426, 0.0)], [0.386894, -0.0263739, 0.921747, 0.0)], [-0.915076, 0.112374, 0.387309, 0.0)], [4.07582, 2.06458, -0.0374676, 1.0)]])
4.07582, 2.06458, -0.0374676
float3(-0.112612, -1.17041, -1.59734)
174650.918195708
normal
simd_float4x4([[-0.141015, -0.989706, 0.0244188, 0.0)], [0.41199, -0.0362373, 0.910467, 0.0)], [-0.90021, 0.13845, 0.41286, 0.0)], [4.15903, 2.06936, -0.0873702, 1.0)]])
4.15903, 2.06936, -0.0873702
float3(-0.138896, -1.14079, -1.60739)
174651.018251791
normal
simd_float4x4([[-0.161158, -0.986896, 0.00808439, 0.0)], [0.454337, -0.0669153, 0.888313, 0.0)], [-0.876131, 0.146831, 0.459167, 0.0)], [4.24469, 2.06639, -0.135097, 1.0)]])
4.24469, 2.06639, -0.135097
float3(-0.147364, -1.08807, -1.6385)
174651.118307958
normal
simd_float4x4([[-0.169175, -0.985473, 0.014899, 0.0)], [0.50416, -0.0735397, 0.860473, 0.0)], [-0.846878, 0.153082, 0.509278, 0.0)], [4.33048, 2.06106, -0.189987, 1.0)]])
4.33048, 2.06106, -0.189987
float3(-0.153687, -1.02938, -1.64528)
174651.218364166
normal
simd_float4x4([[-0.144075, -0.989023, 0.0327943, 0.0)], [0.550762, -0.0526105, 0.833003, 0.0)], [-0.822134, 0.138076, 0.552296, 0.0)], [4.41448, 2.05986, -0.248747, 1.0)]])
4.41448, 2.05986, -0.248747
float3(-0.138519, -0.979259, -1.62394)
174651.318420041
normal
simd_float4x4([[-0.109717, -0.993299, 0.0363323, 0.0)], [0.621189, -0.0399876, 0.78264, 0.0)], [-0.775942, 0.108438, 0.621413, 0.0)], [4.4908, 2.06514, -0.303566, 1.0)]])
4.4908, 2.06514, -0.303566
float3(-0.108651, -0.895537, -1.61103)
174651.418476291
normal
simd_float4x4([[-0.0679191, -0.995975, 0.0584798, 0.0)], [0.682056, -0.00357322, 0.731291, 0.0)], [-0.728139, 0.0895551, 0.679554, 0.0)], [4.56057, 2.07486, -0.369775, 1.0)]])
4.56057, 2.07486, -0.369775
float3(-0.0896753, -0.819899, -1.57438)
174651.518532291
normal
simd_float4x4([[-0.0819337, -0.993841, 0.0746183, 0.0)], [0.737184, -0.0100486, 0.675618, 0.0)], [-0.670707, 0.110363, 0.733466, 0.0)], [4.62826, 2.08218, -0.435277, 1.0)]])
4.62826, 2.08218, -0.435277
float3(-0.110589, -0.740733, -1.58091)
174651.618588333
normal
simd_float4x4([[-0.0770485, -0.991578, 0.104099, 0.0)], [0.789378, 0.00311249, 0.6139, 0.0)], [-0.609054, 0.129474, 0.78249, 0.0)], [4.68335, 2.08814, -0.507549, 1.0)]])
4.68335, 2.08814, -0.507549
float3(-0.129838, -0.661402, -1.56766)
174651.718644458
normal
simd_float4x4([[-0.0602254, -0.990292, 0.125275, 0.0)], [0.825943, 0.0210367, 0.563361, 0.0)], [-0.560528, 0.137399, 0.816658, 0.0)], [4.72996, 2.08343, -0.581921, 1.0)]])
4.72996, 2.08343, -0.581921
float3(-0.137835, -0.601518, -1.54956)
174651.818700583
normal
simd_float4x4([[-0.0595168, -0.989621, 0.130798, 0.0)], [0.856804, 0.0165878, 0.515376, 0.0)], [-0.512196, 0.142741, 0.846924, 0.0)], [4.77122, 2.0757, -0.657396, 1.0)]])
4.77122, 2.0757, -0.657396
float3(-0.143231, -0.543922, -1.55404)
174651.918756583
normal
simd_float4x4([[-0.051599, -0.991307, 0.121025, 0.0)], [0.880546, 0.0120119, 0.473809, 0.0)], [-0.471144, 0.131016, 0.872272, 0.0)], [4.7991, 2.06738, -0.731641, 1.0)]])
4.7991, 2.06738, -0.731641
float3(-0.131394, -0.495237, -1.55868)
174652.018812708
normal
simd_float4x4([[-0.0403109, -0.995, 0.0913788, 0.0)], [0.899128, 0.003768, 0.43767, 0.0)], [-0.435826, 0.099804, 0.89448, 0.0)], [4.82173, 2.0695, -0.798683, 1.0)]])
4.82173, 2.0695, -0.798683
float3(-0.0999705, -0.453387, -1.56701)
174652.11886875
normal
simd_float4x4([[-0.0585488, -0.996198, 0.0645025, 0.0)], [0.920575, -0.0288849, 0.389496, 0.0)], [-0.386152, 0.0821839, 0.918767, 0.0)], [4.84647, 2.07715, -0.864537, 1.0)]])
4.84647, 2.07715, -0.864537
float3(-0.0822767, -0.397878, -1.59978)
174652.218924875
normal
simd_float4x4([[-0.0563562, -0.994438, 0.0889808, 0.0)], [0.936368, -0.0217165, 0.350349, 0.0)], [-0.346468, 0.103063, 0.932383, 0.0)], [4.8666, 2.07864, -0.944273, 1.0)]])
4.8666, 2.07864, -0.944273
float3(-0.103246, -0.355781, -1.59263)
174652.318981083
normal
simd_float4x4([[-0.0702607, -0.993558, 0.0889164, 0.0)], [0.950594, -0.0396683, 0.307891, 0.0)], [-0.302381, 0.106156, 0.947258, 0.0)], [4.89255, 2.07458, -1.01443, 1.0)]])
4.89255, 2.07458, -1.01443
float3(-0.106356, -0.308993, -1.6107)
174652.419037166
normal
simd_float4x4([[-0.0855726, -0.99049, 0.107737, 0.0)], [0.962137, -0.0540648, 0.267151, 0.0)], [-0.258785, 0.126518, 0.957613, 0.0)], [4.91857, 2.06786, -1.09262, 1.0)]])
4.91857, 2.06786, -1.09262
float3(-0.126858, -0.263935, -1.62533)
174652.519093208
normal
simd_float4x4([[-0.0698467, -0.990866, 0.115353, 0.0)], [0.971239, -0.0411614, 0.23452, 0.0)], [-0.22763, 0.128415, 0.965243, 0.0)], [4.944, 2.06129, -1.17289, 1.0)]])
4.944, 2.06129, -1.17289
float3(-0.128771, -0.231595, -1.61231)
174652.619149166
normal
simd_float4x4([[-0.0504071, -0.993169, 0.105237, 0.0)], [0.981191, -0.0295858, 0.190762, 0.0)], [-0.186345, 0.112874, 0.975979, 0.0)], [4.971, 2.05772, -1.24925, 1.0)]])
4.971, 2.05772, -1.24925
float3(-0.113115, -0.188661, -1.60058)
174652.719205458
normal
simd_float4x4([[-0.0368576, -0.991915, 0.121437, 0.0)], [0.990896, -0.0205299, 0.133058, 0.0)], [-0.129489, 0.125236, 0.983641, 0.0)], [4.99008, 2.06477, -1.3318, 1.0)]])
4.99008, 2.06477, -1.3318
float3(-0.125565, -0.13089, -1.59149)
174652.8192615
normal
simd_float4x4([[-0.0234106, -0.995438, 0.0924979, 0.0)], [0.996068, -0.0153172, 0.0872589, 0.0)], [-0.085444, 0.0941769, 0.991882, 0.0)], [4.99317, 2.0735, -1.40016, 1.0)]])
4.99317, 2.0735, -1.40016
float3(-0.0943167, -0.0859311, -1.58618)
174652.919317708
normal
simd_float4x4([[-0.014241, -0.991137, 0.132077, 0.0)], [0.998997, -0.00849641, 0.0439562, 0.0)], [-0.0424444, 0.13257, 0.990264, 0.0)], [4.98156, 2.07863, -1.47243, 1.0)]])
4.98156, 2.07863, -1.47243
float3(-0.132962, -0.0428355, -1.57937)
174653.019373541
normal
simd_float4x4([[0.0246441, -0.991697, 0.126214, 0.0)], [0.999263, 0.0281517, 0.0260825, 0.0)], [-0.0294191, 0.125478, 0.99166, 0.0)], [4.95631, 2.0789, -1.51576, 1.0)]])
4.95631, 2.0789, -1.51576
float3(-0.125809, -0.0296578, -1.54242)
174653.119429875
normal
simd_float4x4([[0.0371948, -0.987548, 0.152856, 0.0)], [0.99902, 0.040422, 0.018059, 0.0)], [-0.0240129, 0.152035, 0.988084, 0.0)], [4.93063, 2.06931, -1.56881, 1.0)]])
4.93063, 2.06931, -1.56881
float3(-0.152626, -0.0242978, -1.52989)
174653.219485875
normal
simd_float4x4([[0.0511832, -0.986099, 0.15808, 0.0)], [0.998642, 0.0520766, 0.00151195, 0.0)], [-0.00972321, 0.157788, 0.987425, 0.0)], [4.8947, 2.06148, -1.6324, 1.0)]])
4.8947, 2.06148, -1.6324
float3(-0.15845, -0.00984671, -1.51803)
174653.319541958
normal
simd_float4x4([[0.04626, -0.988623, 0.143123, 0.0)], [0.998836, 0.0438225, -0.0201381, 0.0)], [0.013637, 0.143888, 0.9895, 0.0)], [4.85399, 2.05841, -1.70794, 1.0)]])
4.85399, 2.05841, -1.70794
float3(-0.144389, 0.0137808, -1.5265)
174653.419598083
normal
simd_float4x4([[0.0209501, -0.986316, 0.163527, 0.0)], [0.998284, 0.0116896, -0.0573879, 0.0)], [0.054691, 0.164449, 0.984868, 0.0)], [4.80488, 2.06019, -1.79534, 1.0)]])
4.80488, 2.06019, -1.79534
float3(-0.165199, 0.0554743, -1.55895)
174653.519654208
normal
simd_float4x4([[0.00328512, -0.992732, 0.120301, 0.0)], [0.992656, -0.0113102, -0.120439, 0.0)], [0.120925, 0.119814, 0.985405, 0.0)], [4.75281, 2.06956, -1.86263, 1.0)]])
4.75281, 2.06956, -1.86263
float3(-0.120102, 0.122105, -1.58219)
174653.619710291
normal
simd_float4x4([[-0.00416815, -0.990911, 0.134455, 0.0)], [0.981028, -0.0301128, -0.191514, 0.0)], [0.193822, 0.131106, 0.972237, 0.0)], [4.70286, 2.07396, -1.9422, 1.0)]])
4.70286, 2.07396, -1.9422
float3(-0.131484, 0.196777, -1.60118)
174653.719766333
normal
simd_float4x4([[-0.00747817, -0.988403, 0.151672, 0.0)], [0.9674, -0.0455481, -0.249126, 0.0)], [0.253145, 0.144865, 0.956521, 0.0)], [4.65572, 2.07722, -2.01825, 1.0)]])
4.65572, 2.07722, -2.01825
float3(-0.145376, 0.25872, -1.61685)
174653.819822583
normal
simd_float4x4([[-0.0189887, -0.989335, 0.144416, 0.0)], [0.956175, -0.0601798, -0.286544, 0.0)], [0.292178, 0.132646, 0.94712, 0.0)], [4.61883, 2.07094, -2.08924, 1.0)]])
4.61883, 2.07094, -2.08924
float3(-0.133038, 0.299229, -1.63155)
174653.919878541
normal
simd_float4x4([[-0.0191334, -0.987232, 0.158138, 0.0)], [0.949977, -0.0672656, -0.30499, 0.0)], [0.311733, 0.144392, 0.939135, 0.0)], [4.5821, 2.06446, -2.17456, 1.0)]])
4.5821, 2.06446, -2.17456
float3(-0.144898, 0.320493, -1.63883)
174654.01993475
normal
simd_float4x4([[-0.0345177, -0.990049, 0.136425, 0.0)], [0.943982, -0.0771243, -0.320857, 0.0)], [0.328185, 0.117707, 0.937251, 0.0)], [4.55249, 2.06757, -2.26099, 1.0)]])
4.55249, 2.06757, -2.26099
float3(-0.117981, 0.336815, -1.64854)
174654.119990791
normal
simd_float4x4([[-0.0304867, -0.991043, 0.130019, 0.0)], [0.940483, -0.0724905, -0.33202, 0.0)], [0.338471, 0.112159, 0.934269, 0.0)], [4.51839, 2.0747, -2.3557, 1.0)]])
4.51839, 2.0747, -2.3557
float3(-0.112395, 0.347577, -1.64381)
174654.220046916
normal
simd_float4x4([[-0.0281439, -0.992248, 0.121048, 0.0)], [0.941048, -0.0671381, -0.331544, 0.0)], [0.337101, 0.104581, 0.935642, 0.0)], [4.48349, 2.09241, -2.44233, 1.0)]])
4.48349, 2.09241, -2.44233
float3(-0.104773, 0.345811, -1.63836)
174654.320103041
normal
simd_float4x4([[-0.0179319, -0.989772, 0.141528, 0.0)], [0.937087, -0.0659947, -0.342802, 0.0)], [0.348636, 0.126476, 0.928686, 0.0)], [4.44374, 2.10038, -2.5284, 1.0)]])
4.44374, 2.10038, -2.5284
float3(-0.126816, 0.359128, -1.63737)
174654.42015925
normal
simd_float4x4([[0.0209799, -0.988515, 0.149659, 0.0)], [0.934326, -0.033887, -0.354806, 0.0)], [0.355802, 0.147274, 0.922884, 0.0)], [4.39329, 2.10431, -2.60111, 1.0)]])
4.39329, 2.10431, -2.60111
float3(-0.147812, 0.367973, -1.60506)
174654.520215333
normal
simd_float4x4([[0.0353368, -0.991054, 0.128698, 0.0)], [0.931371, -0.0140344, -0.363802, 0.0)], [0.362353, 0.132721, 0.922543, 0.0)], [4.34356, 2.0993, -2.67203, 1.0)]])
4.34356, 2.0993, -2.67203
float3(-0.133114, 0.374264, -1.58496)
174654.620271375
normal
simd_float4x4([[0.0185412, -0.99324, 0.114591, 0.0)], [0.928531, -0.0253985, -0.370386, 0.0)], [0.370792, 0.113269, 0.921783, 0.0)], [4.29614, 2.09203, -2.74704, 1.0)]])
4.29614, 2.09203, -2.74704
float3(-0.113512, 0.38245, -1.59636)
174654.720327625
normal
simd_float4x4([[0.0160571, -0.995069, 0.0978799, 0.0)], [0.933261, -0.0202169, -0.35863, 0.0)], [0.35884, 0.097106, 0.928334, 0.0)], [4.24771, 2.09303, -2.81967, 1.0)]])
4.24771, 2.09303, -2.81967
float3(-0.0972593, 0.368851, -1.59111)
174654.820383708
normal
simd_float4x4([[0.00780139, -0.993753, 0.111326, 0.0)], [0.933567, -0.0326546, -0.356913, 0.0)], [0.358319, 0.106715, 0.92748, 0.0)], [4.20878, 2.1023, -2.89792, 1.0)]])
4.20878, 2.1023, -2.89792
float3(-0.106918, 0.368672, -1.60364)
174654.920439708
normal
simd_float4x4([[0.0357614, -0.989735, 0.138371, 0.0)], [0.940566, -0.0134575, -0.339345, 0.0)], [0.337723, 0.142282, 0.930429, 0.0)], [4.16745, 2.10707, -2.97749, 1.0)]])
4.16745, 2.10707, -2.97749
float3(-0.142767, 0.348187, -1.58439)
174655.020495875
normal
simd_float4x4([[0.018171, -0.988962, 0.147054, 0.0)], [0.953423, -0.0271518, -0.300412, 0.0)], [0.301089, 0.145663, 0.942406, 0.0)], [4.15027, 2.1031, -3.0545, 1.0)]])
4.15027, 2.1031, -3.0545
float3(-0.146183, 0.30924, -1.59824)
174655.120552
normal
simd_float4x4([[-0.00820946, -0.990707, 0.135762, 0.0)], [0.971942, -0.0398222, -0.231825, 0.0)], [0.235077, 0.13005, 0.963237, 0.0)], [4.13561, 2.09851, -3.15323, 1.0)]])
4.13561, 2.09851, -3.15323
float3(-0.130419, 0.23937, -1.61097)
174655.220608083
normal
simd_float4x4([[-0.0119753, -0.994362, 0.105362, 0.0)], [0.986315, -0.0290742, -0.162286, 0.0)], [0.164435, 0.101977, 0.981102, 0.0)], [4.12389, 2.10454, -3.25242, 1.0)]])
4.12389, 2.10454, -3.25242
float3(-0.102154, 0.166059, -1.60003)
174655.320664291
normal
simd_float4x4([[-0.0216821, -0.99697, 0.0747001, 0.0)], [0.991537, -0.0310095, -0.126065, 0.0)], [0.127999, 0.0713346, 0.989206, 0.0)], [4.10948, 2.11148, -3.35597, 1.0)]])
4.10948, 2.11148, -3.35597
float3(-0.0713952, 0.128681, -1.60189)
174655.42072025
normal
simd_float4x4([[-0.0167841, -0.997216, 0.0726594, 0.0)], [0.99544, -0.0234903, -0.0924494, 0.0)], [0.0938987, 0.0707764, 0.993063, 0.0)], [4.09062, 2.13163, -3.45205, 1.0)]])
4.09062, 2.13163, -3.45205
float3(-0.0708356, 0.0942744, -1.59435)
174655.520776458
normal
simd_float4x4([[-0.011146, -0.996189, 0.0865057, 0.0)], [0.998228, -0.0161418, -0.0572678, 0.0)], [0.0584459, 0.0857141, 0.994604, 0.0)], [4.07079, 2.14068, -3.52812, 1.0)]])
4.07079, 2.14068, -3.52812
float3(-0.0858194, 0.0586954, -1.587)
174655.620832708
normal
simd_float4x4([[-0.0115661, -0.995465, 0.0944261, 0.0)], [0.99993, -0.0117371, -0.00125624, 0.0)], [0.00235883, 0.094405, 0.995531, 0.0)], [4.0653, 2.15019, -3.59511, 1.0)]])
4.0653, 2.15019, -3.59511
float3(-0.0945457, 0.00236942, -1.58259)
174655.720888791
normal
simd_float4x4([[-0.0121627, -0.997798, 0.0652021, 0.0)], [0.995096, -0.00567691, 0.0987484, 0.0)], [-0.0981608, 0.0660834, 0.992974, 0.0)], [4.05846, 2.15207, -3.63984, 1.0)]])
4.05846, 2.15207, -3.63984
float3(-0.0661316, -0.0985352, -1.57649)
174655.820944958
normal
simd_float4x4([[-0.00227397, -0.997636, 0.0686793, 0.0)], [0.973933, 0.0133689, 0.226443, 0.0)], [-0.226826, 0.0674039, 0.9716, 0.0)], [4.0393, 2.14815, -3.68706, 1.0)]])
4.0393, 2.14815, -3.68706
float3(-0.067455, -0.229349, -1.5574)
174655.921000958
normal
simd_float4x4([[-0.00160659, -0.993679, 0.112249, 0.0)], [0.928545, 0.0401863, 0.369038, 0.0)], [-0.371216, 0.104821, 0.922611, 0.0)], [4.00725, 2.14047, -3.74663, 1.0)]])
4.00725, 2.14047, -3.74663
float3(-0.105014, -0.382534, -1.53038)
174656.021057208
normal
simd_float4x4([[-0.0103696, -0.9967, 0.0805145, 0.0)], [0.853419, 0.033141, 0.520171, 0.0)], [-0.521122, 0.0741065, 0.850259, 0.0)], [3.96687, 2.13322, -3.78406, 1.0)]])
3.96687, 2.13322, -3.78406
float3(-0.0741745, -0.54985, -1.53756)
174656.12111325
normal
simd_float4x4([[-0.0712937, -0.996426, 0.0453003, 0.0)], [0.786329, -0.0282035, 0.617163, 0.0)], [-0.61368, 0.0796208, 0.78553, 0.0)], [3.92836, 2.12683, -3.81977, 1.0)]])
3.92836, 2.12683, -3.81977
float3(-0.0797051, -0.663191, -1.59909)
174656.221169458
normal
simd_float4x4([[-0.128909, -0.989389, 0.0670226, 0.0)], [0.715524, -0.0460062, 0.697072, 0.0)], [-0.686592, 0.137815, 0.713862, 0.0)], [3.8912, 2.13086, -3.86193, 1.0)]])
3.8912, 2.13086, -3.86193
float3(-0.138255, -0.765928, -1.61726)
174656.321225416
normal
simd_float4x4([[-0.130879, -0.987585, 0.0868686, 0.0)], [0.669804, -0.023484, 0.742167, 0.0)], [-0.730913, 0.155319, 0.664562, 0.0)], [3.84413, 2.14099, -3.89541, 1.0)]])
3.84413, 2.14099, -3.89541
float3(-0.155951, -0.83291, -1.59457)
174656.421281625
normal
simd_float4x4([[-0.104525, -0.991149, 0.0818408, 0.0)], [0.653242, -0.00637298, 0.757123, 0.0)], [-0.7499, 0.1326, 0.648126, 0.0)], [3.79742, 2.15146, -3.90942, 1.0)]])
3.79742, 2.15146, -3.90942
float3(-0.132992, -0.858068, -1.57723)
174656.521337708
normal
simd_float4x4([[-0.0831056, -0.993918, 0.072257, 0.0)], [0.637464, 0.00271197, 0.770476, 0.0)], [-0.765986, 0.110092, 0.633361, 0.0)], [3.75641, 2.15669, -3.91991, 1.0)]])
3.75641, 2.15669, -3.91991
float3(-0.110316, -0.879892, -1.56807)
174656.621393875
normal
simd_float4x4([[-0.0670033, -0.995487, 0.0672033, 0.0)], [0.618977, 0.0113543, 0.785327, 0.0)], [-0.782546, 0.0942168, 0.615423, 0.0)], [3.72566, 2.15857, -3.92975, 1.0)]])
3.72566, 2.15857, -3.92975
float3(-0.0943567, -0.90438, -1.55939)
174656.721450208
normal
simd_float4x4([[-0.0546216, -0.996534, 0.0627498, 0.0)], [0.608184, 0.0166372, 0.793622, 0.0)], [-0.791915, 0.0815123, 0.605167, 0.0)], [3.70278, 2.15761, -3.9401, 1.0)]])
3.70278, 2.15761, -3.9401
float3(-0.0816028, -0.91828, -1.5541)
174656.82150625
normal
simd_float4x4([[-0.0558728, -0.995778, 0.0728308, 0.0)], [0.598685, 0.0249631, 0.800595, 0.0)], [-0.799033, 0.0883342, 0.594763, 0.0)], [3.68911, 2.15769, -3.95347, 1.0)]])
3.68911, 2.15769, -3.95347
float3(-0.0884495, -0.930919, -1.54573)
174656.921562416
normal
simd_float4x4([[-0.0486487, -0.995971, 0.0753314, 0.0)], [0.589352, 0.0322686, 0.807231, 0.0)], [-0.80641, 0.0836675, 0.585408, 0.0)], [3.67443, 2.15659, -3.95656, 1.0)]])
3.67443, 2.15659, -3.95656
float3(-0.0837654, -0.94287, -1.53841)
174657.021618333
normal
simd_float4x4([[-0.0439589, -0.995416, 0.0849419, 0.0)], [0.58102, 0.0436929, 0.812716, 0.0)], [-0.812702, 0.085079, 0.576436, 0.0)], [3.66689, 2.15628, -3.96394, 1.0)]])
3.66689, 2.15628, -3.96394
float3(-0.085182, -0.953867, -1.52693)
174657.121674666
normal
simd_float4x4([[-0.0447808, -0.995008, 0.0891888, 0.0)], [0.57364, 0.0474814, 0.81773, 0.0)], [-0.817883, 0.0877808, 0.56865, 0.0)], [3.66738, 2.15624, -3.97002, 1.0)]])
3.66738, 2.15624, -3.97002
float3(-0.087894, -0.963251, -1.52311)
174657.22173075
normal
simd_float4x4([[-0.0459075, -0.994763, 0.0913182, 0.0)], [0.568975, 0.049099, 0.820888, 0.0)], [-0.821073, 0.0896427, 0.563741, 0.0)], [3.66907, 2.15867, -3.97334, 1.0)]])
3.66907, 2.15867, -3.97334
float3(-0.0897631, -0.969127, -1.52148)
174657.321786875
normal
simd_float4x4([[-0.046456, -0.995573, 0.0817076, 0.0)], [0.566531, 0.0411097, 0.823014, 0.0)], [-0.82273, 0.0845239, 0.562114, 0.0)], [3.67095, 2.16107, -3.97026, 1.0)]])
3.67095, 2.16107, -3.97026
float3(-0.0846249, -0.971414, -1.52953)
174657.421843041
normal
simd_float4x4([[-0.040939, -0.996478, 0.0731874, 0.0)], [0.56576, 0.0372561, 0.823728, 0.0)], [-0.823553, 0.0751291, 0.562243, 0.0)], [3.6691, 2.16046, -3.97059, 1.0)]])
3.6691, 2.16046, -3.97059
float3(-0.0752, -0.971773, -1.53343)
174657.521899125
normal
simd_float4x4([[-0.0439487, -0.996599, 0.0697004, 0.0)], [0.565062, 0.0327385, 0.824398, 0.0)], [-0.823877, 0.0756163, 0.561702, 0.0)], [3.66907, 2.16018, -3.9724, 1.0)]])
3.66907, 2.16018, -3.9724
float3(-0.0756885, -0.972404, -1.53796)
174657.621955166
normal
simd_float4x4([[-0.0477815, -0.996659, 0.0662418, 0.0)], [0.563455, 0.0278647, 0.825677, 0.0)], [-0.824764, 0.0767763, 0.560241, 0.0)], [3.66829, 2.16016, -3.97248, 1.0)]])
3.66829, 2.16016, -3.97248
float3(-0.0768519, -0.974116, -1.54285)
174657.7220115
normal
simd_float4x4([[-0.0444379, -0.99706, 0.0624193, 0.0)], [0.561518, 0.0267487, 0.827032, 0.0)], [-0.82627, 0.0718011, 0.558679, 0.0)], [3.668, 2.15926, -3.97362, 1.0)]])
3.668, 2.15926, -3.97362
float3(-0.071863, -0.97626, -1.54398)
174657.822067791
normal
simd_float4x4([[-0.0482643, -0.996928, 0.0616893, 0.0)], [0.557684, 0.024342, 0.829696, 0.0)], [-0.828649, 0.0744478, 0.554796, 0.0)], [3.66975, 2.15984, -3.97468, 1.0)]])
3.66975, 2.15984, -3.97468
float3(-0.0745168, -0.980822, -1.54638)
174657.922123791
normal
simd_float4x4([[-0.0411911, -0.997618, 0.0553383, 0.0)], [0.555457, 0.0231737, 0.831222, 0.0)], [-0.830525, 0.064977, 0.553179, 0.0)], [3.66779, 2.16062, -3.97366, 1.0)]])
3.66779, 2.16062, -3.97366
float3(-0.0650229, -0.983214, -1.54757)
174658.022180083
normal
simd_float4x4([[-0.0435084, -0.997624, 0.0534151, 0.0)], [0.551734, 0.0205796, 0.833767, 0.0)], [-0.832885, 0.0657467, 0.549527, 0.0)], [3.66893, 2.16065, -3.97373, 1.0)]])
3.66893, 2.16065, -3.97373
float3(-0.0657942, -0.987571, -1.55017)
174658.122236125
normal
simd_float4x4([[-0.0455973, -0.997549, 0.0530828, 0.0)], [0.548168, 0.0194375, 0.836143, 0.0)], [-0.835125, 0.0672242, 0.545938, 0.0)], [3.66993, 2.16114, -3.97572, 1.0)]])
3.66993, 2.16114, -3.97572
float3(-0.0672749, -0.99181, -1.55131)
174658.22229225
normal
simd_float4x4([[-0.0451439, -0.997727, 0.0500203, 0.0)], [0.547659, 0.0171588, 0.836525, 0.0)], [-0.835483, 0.0651581, 0.54564, 0.0)], [3.67088, 2.16117, -3.97649, 1.0)]])
3.67088, 2.16117, -3.97649
float3(-0.0652043, -0.992256, -1.5536)
174658.322348375
normal
simd_float4x4([[-0.0447796, -0.997821, 0.0484511, 0.0)], [0.546645, 0.0161203, 0.837209, 0.0)], [-0.836166, 0.0639754, 0.544732, 0.0)], [3.67129, 2.16157, -3.97811, 1.0)]])
3.67129, 2.16157, -3.97811
float3(-0.0640191, -0.993392, -1.55464)
174658.422404583
normal
simd_float4x4([[-0.0442631, -0.997909, 0.0470969, 0.0)], [0.54635, 0.0152885, 0.837417, 0.0)], [-0.836386, 0.0627981, 0.544531, 0.0)], [3.67118, 2.16099, -3.9791, 1.0)]])
3.67118, 2.16099, -3.9791
float3(-0.0628394, -0.993682, -1.55548)
